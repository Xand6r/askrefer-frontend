{"version":3,"sources":["assets/logo.jsx","utilities/constants.js","utilities/index.js","components/navbar/index.jsx","assets/svgs/desktopWIP.svg","pages/desktop/index.jsx","components/layout/index.jsx","assets/svgs/landingicon.svg","components/loader/index.jsx","components/button/index.jsx","pages/landing/index.jsx","api/index.js","assets/svgs/closeIcon.svg","components/pdfModal/index.jsx","components/overlay/index.jsx","assets/svgs/happy.png","components/postcard/components/match/index.jsx","components/postcard/components/refer/index.jsx","components/postcard/index.jsx","pages/post/components/kyc/index.jsx","pages/post/index.jsx","assets/svgs/pagenotfound.svg","pages/notFound/index.jsx","assets/svgs/interview.svg","components/postcard/components/preview/index.jsx","assets/svgs/brokenlink.svg","pages/referral/components/expired/index.jsx","pages/referral/index.jsx","pages/dashboard/components/dayBar/index.jsx","pages/dashboard/components/referrerBar/index.jsx","pages/dashboard/components/confirmDelete/index.jsx","pages/dashboard/components/editPost/index.jsx","components/blueLoader/index.jsx","pages/dashboard/index.jsx","routes.jsx","App.jsx","workers/reportWebVitals.js","index.jsx"],"names":["Logo","xmlns","width","height","viewBox","id","data-name","transform","fill","font-size","font-family","font-weight","x","y","d","TOAST_INITIALIZERS","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","LINKEDIN_REGEXP","showErrorToast","text","params","toast","error","showSuccessToast","success","copyToClipboard","url","successMessage","navigator","clipboard","writeText","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","validateEmail","email","test","String","toLowerCase","NavBar","useEffect","message","URLSearchParams","window","location","search","get","to","Index","className","src","desktopImage","alt","Layout","children","useState","isMobile","setIsMobile","handleResizeScreen","useCallback","innerWidth","addEventListener","removeEventListener","CircularProgressSpinner","index","onClick","disabled","loading","history","useHistory","Megaphone","push","BASE","postReq","path","obj","a","axios","post","headers","response","getReq","PdfViewer","onClose","open","numPages","setNumPages","pageNumber","setPageNumber","setLoaded","pdfRef","useRef","useClickAway","isNextPage","isPreviousPage","CloseIcon","ref","file","onLoadSuccess","style","zIndex","p","toggleOpen","Component","component","overlayRef","INITIAL_STATE","name","onSubmit","user","submitted","setSubmitted","state","setState","setLoading","changeState","e","target","buttonIsDisabled","Celebrate","action","htmlFor","type","onChange","referralId","href","split","reverse","referralKey","fullName","linkedIn","then","data","catch","err","finally","link","inputRef","dropdownRef","showDropdown","setShowDropdown","attached","setAttached","res","console","log","attachUserToURL","buttonDisabled","placeholder","marginRight","class","data-action","title","expiryDate","creationDate","postId","userUrl","preview","onProceed","showPdf","setShowPdf","yes","setYes","maybe","setMaybe","loadingLink","setLoadingLink","refLink","setrefLink","stats","setStats","createdAt","details","_id","owner","Boolean","avatarDetails","initials","firstName","lastname","color","randomColor","seed","getAvatarDetails","createPost","today","moment","timeDifferenceText","dayDiff","goHome","setTimeout","onSubmitYes","onSubmitMaybe","gotoOwnerReference","isPdf","diff","endsWith","backgroundColor","cursor","postcount","referralCount","totalAccepted","generateReferral","postState","setLink","openOverlay","setOpenOverLay","submitPost","payload","referralLink","exec","desire","duration","public","allowedEmails","KYC_INITIAL_STATE","kycState","setKycState","setOpenOverlay","setFile","updateState","formatURL","startsWith","gotoSecondState","uploadImage","FormData","append","fetch","method","resp","json","rows","maxLength","cols","current","click","files","display","defaultChecked","icons","val","placeHolder","seprators","durationInWeeks","accessControlMode","notFoundImage","code","setError","stage","setStage","setPost","key","completeState","status","brokenLink","props","previewOpen","setPreviewOpen","setUser","paramId","match","BarChartComponent","columnName","columnLabel","chartLabel","ResponsiveContainer","BarChart","CartesianGrid","strokeDasharray","XAxis","angle","textAnchor","minTickGap","dataKey","tick","fontSize","Label","offset","YAxis","Tooltip","Legend","verticalAlign","align","Bar","stackId","onSuccess","setPostId","newDetails","DEFAULT_OPTIONS","posts","setPosts","allPosts","setAllPosts","postsLoading","setPostsLoading","setValue","openConfirmOverlay","setOpenConfirmOverlay","openEditOverlay","setOpenEditOverlay","selectedPost","find","viewsByDay","setViewsByDay","viewsByUser","setViewsByUser","appliedCandidates","setAppliedCandidates","triggerError","removeApplicant","applicantId","filter","rejectApplicant","userId","acceptApplicant","fetchViewsByDay","fetchViewsByUser","fetchAppliedCandidates","closeDownPost","fetchInitialPost","token","userToken","jwt_decode","mappedData","map","datum","label","OneCandidate","oac","actionApplicant","identifier","acceptURL","rejectURL","isLoading","options","isDisabled","newValue","aria-hidden","justifyContent","length","marginTop","textAlign","Routes","exact","LandingPage","PostPage","ReferralPage","DashboardPage","event","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.07415317.chunk.js","sourcesContent":["export default function Logo() {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"127.055\"\n            height=\"40.924\"\n            viewBox=\"0 0 97.055 31.924\"\n        >\n            <g\n                id=\"Group_9204\"\n                data-name=\"Group 9204\"\n                transform=\"translate(-15 -63.312)\"\n            >\n                <g\n                    id=\"Group_9572\"\n                    data-name=\"Group 9572\"\n                    transform=\"translate(-255 46.231)\"\n                >\n                    <text\n                        id=\"askrefer\"\n                        transform=\"translate(308 41.005)\"\n                        fill=\"#8584ff\"\n                        font-size=\"20\"\n                        font-family=\"Source Sans Pro, sans-serif\"\n                        font-weight=\"700\"\n                    >\n                        <tspan x=\"-37.02\" y=\"0\">\n                            ask\n                        </tspan>\n                        <tspan y=\"0\" fill=\"#fdc84e\">\n                            refer\n                        </tspan>\n                    </text>\n                    <g\n                        id=\"send_1_\"\n                        data-name=\"send (1)\"\n                        transform=\"translate(349.566 17.081)\"\n                    >\n                        <g id=\"Group_9437\" data-name=\"Group 9437\">\n                            <g id=\"Group_9436\" data-name=\"Group 9436\">\n                                <path\n                                    id=\"Path_13560\"\n                                    data-name=\"Path 13560\"\n                                    d=\"M16.767.174.293,8.5a.51.51,0,0,0-.12.086A.545.545,0,0,0,.081,8.7a.578.578,0,0,0-.059.139A.6.6,0,0,0,0,9a.611.611,0,0,0,.019.156.585.585,0,0,0,.057.141.545.545,0,0,0,.09.119A.506.506,0,0,0,.285,9.5l5.181,2.823L6.7,11.782l-.5,1.329,2.583,5.6a.549.549,0,0,0,.079.125.527.527,0,0,0,.108.1.5.5,0,0,0,.13.063.474.474,0,0,0,.288,0,.5.5,0,0,0,.128-.063.525.525,0,0,0,.108-.1.559.559,0,0,0,.08-.13L17.447.918A.5.5,0,0,0,17.474.6a.641.641,0,0,0-.151-.283.569.569,0,0,0-.259-.166.4.4,0,0,0-.3.027Z\"\n                                    fill=\"#fdc84e\"\n                                />\n                            </g>\n                        </g>\n                        <g\n                            id=\"Group_9439\"\n                            data-name=\"Group 9439\"\n                            transform=\"translate(4.817 6.913)\"\n                        >\n                            <g id=\"Group_9438\" data-name=\"Group 9438\">\n                                <path\n                                    id=\"Path_13561\"\n                                    data-name=\"Path 13561\"\n                                    d=\"M6.158.237A.651.651,0,0,0,5.943.083a.613.613,0,0,0-.489,0,.642.642,0,0,0-.215.151L0,5.8l.614.33.307.656L6.158,1.217A.693.693,0,0,0,6.3.988a.739.739,0,0,0,0-.522A.7.7,0,0,0,6.158.237Z\"\n                                    fill=\"#5a59ff\"\n                                />\n                            </g>\n                        </g>\n                    </g>\n                </g>\n            </g>\n        </svg>\n    );\n}\n","export const TOAST_INITIALIZERS = {\n    position: \"top-left\",\n    autoClose: 2000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n};\n\nexport const DATE_FORMAT = \"DD-MM-YYYY\";\nexport const REDIRECT_DELAY = 2000; //TIME IN MILLISECOND\nexport const LINKEDIN_REGEXP =\n    /(ftp|http|https):\\/\\/?((www|\\w\\w)\\.)?linkedin.com(\\w+:{0,1}\\w*@)?(\\S+)(:([0-9])+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n","/**\n * A repository of utility functions used throughout the application\n */\nimport { toast } from \"react-toastify\";\nimport randomColor from \"randomcolor\"; // import the script\nimport { LINKEDIN_REGEXP, TOAST_INITIALIZERS } from \"./constants\";\nimport jwt_decode from \"jwt-decode\";\n\n\n/**\n * A utility function used to decode jwt tokens\n * @param {*} text \n * @param {*} params \n */\nexport const decodeToken = (token) => {\n    return jwt_decode(token);\n};\n\n\n/**\n * A utility function used to show an error toast\n */\nexport const showErrorToast = (text, params = {}) => {\n    toast.error(text, {...TOAST_INITIALIZERS, ...params});\n};\n\n/**\n * A utility function to show a success toast\n */\nexport const showSuccessToast = (text, params) => {\n    toast.success(text, {...TOAST_INITIALIZERS, ...params});\n};\n\n/**\n * A utility function to get initials and a random color\n * useful for displaying avatar placeholders\n */\nexport const getAvatarDetails = (fullName) => {\n    if (!fullName) return \"\";\n    const [firstName, lastname] = fullName.split(\"\");\n    let initials;\n    if (lastname) {\n        initials = `${fullName?.[0]}${fullName?.[1]}`;\n    } else {\n        initials = `${firstName?.[0]}${lastname?.[0]}`;\n    }\n    const color = randomColor({ seed: initials });\n    return {\n        color,\n        initials,\n    };\n};\n\n/**\n * MAnually redirecting to another URL\n */\nexport const gotoURL = (link) => {\n    window.open(link, \"_blank\");\n};\n\n/**\n * Copy a text to clipboard\n */\nexport const copyToClipboard = (url, successMessage = \"\") => {\n    // fallback for non navigator browser support\n    if (navigator && navigator.clipboard) {\n        navigator.clipboard.writeText(url);\n    } else {\n        const el = document.createElement(\"textarea\");\n        el.value = url;\n        document.body.appendChild(el);\n        el.select();\n        document.execCommand(\"copy\");\n        document.body.removeChild(el);\n    }\n    successMessage && showSuccessToast(successMessage);\n};\n\n/**\n * Validate an email address\n */\nexport function validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\n/**\n * validate a linkedin url\n */\nexport function validateLinkedIn(url) {\n    return LINKEDIN_REGEXP.exec(url);\n}\n\n/**\n * Validate url using regex\n */\nexport function isUrlValid(userInput) {\n    var res = userInput.match(\n        /(http(s)?:\\/\\/.)(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g\n    );\n    if (res == null) return false;\n    else return true;\n}\n","import { Link } from 'react-router-dom';\nimport './styles.scss';\nimport Logo from '@/assets/logo';\nimport { useEffect } from 'react';\nimport { showSuccessToast } from '@/utilities';\n\nexport default function NavBar() {\n\n    useEffect(() => {\n        const query = new URLSearchParams(window.location.search);\n        const message = query.get(\"message\");\n        showSuccessToast(message);\n    }, []);\n\n    return (\n        <div id=\"navbar-wrapper\">\n            <nav>\n                <Link to=\"/\">\n                    <Logo />\n                </Link>\n            </nav>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/desktopWIP.1968d420.svg\";","import { useHistory } from \"react-router\";\nimport NavBar from \"@/components/navbar\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport desktopImage from \"@/assets/svgs/desktopWIP.svg\";\nimport \"./style.scss\";\n\nexport default function Index() {\n\n    return (\n        <>\n        <Router>\n            <NavBar /> \n            <div className=\"desktop\">\n                <img src={desktopImage} alt=\"\" />\n                <h1>We are working on a desktop version for AskRefer. For now please view on a mobile device.</h1>\n            </div>\n        </Router>\n        </>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport DesktopLoading from '@/pages/desktop';\nimport \"./styles.scss\";\n\nconst Layout = ({ children }) => {\n  const [isMobile, setIsMobile] = useState(true);\n  const handleResizeScreen = useCallback(() => {\n    if (window.innerWidth < 767) {\n      setIsMobile(true);\n    } else {\n      setIsMobile(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (window.innerWidth < 767) {\n      setIsMobile(true);\n    } else {\n      setIsMobile(false);\n    }\n  }, [window]);\n\n  //-----------------------------------------------------------------\n  //Fire a function anything window is resized\n  //-----------------------------------------------------------------\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResizeScreen);\n    return () => window.removeEventListener(\"resize\", handleResizeScreen);\n  });\n\n  if (isMobile) {\n    return (\n      <>\n        <div className=\"layout-app-wrapper\">{children}</div>\n      </>\n    );\n  } else {\n    // TODO include a popup that were comin to mobile soon\n    return (\n      <div className=\"layout-app-wrapper\">\n        <DesktopLoading />\n      </div>\n    );\n  }\n};\n\nexport default Layout;\n","export default __webpack_public_path__ + \"static/media/landingicon.a9f60919.svg\";","import React from \"react\";\nimport './loader.scss';\n\n\nconst CircularProgressSpinner = () => {\n    return (\n        <div className=\"askrefer-circular-loader\">\n            <div className=\"lds-ring\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    );\n};\n\nexport default CircularProgressSpinner;\n","import CircularProgressSpinner from \"../loader\";\nimport \"./style.scss\";\n\nexport default function index({ text, onClick, disabled, loading }) {\n    const activateButton = () => {\n        if (disabled || loading) return;\n        return onClick();\n    };\n\n    const className = `${disabled ? \"--disabled\" : \"\"}`;\n    return (\n        <div onClick={activateButton} id=\"action-button\" className={className}>\n            {loading ? (\n                <div className=\"spinner\">\n                    <CircularProgressSpinner />\n                </div>\n            ) : (\n                <h4>{text}</h4>\n            )}\n        </div>\n    );\n}\n","import { useHistory } from \"react-router-dom\";\n// import Slider from \"react-slick\";\nimport Megaphone from \"@/assets/svgs/landingicon.svg\";\nimport Button from \"@/components/button\";\n// import { QuestionOne, QuestionTwo, QuestionThree } from \"./components/questions\";\nimport \"./styles.scss\";\n// import \"slick-carousel/slick/slick.css\";\n// import \"slick-carousel/slick/slick-theme.css\";\nconst CTA_TEXT = \"Create an Ask\";\n\nexport default function Index() {\n  const history = useHistory();\n  // const settings = {\n  //     infinite: true,\n  //     speed: 500,\n  //     slidesToShow: 1,\n  //     slidesToScroll: 1,\n  //     autoplay: true,\n  //     arrows: false\n  //   };\n  /**\n   * The CTA to be called when we choose to go to the next page\n   */\n  const onClickButton = () => {\n    history.push(\"/post\");\n  };\n\n  return (\n    <div id=\"landing-page\">\n      <section className=\"header\">\n        <img src={Megaphone} alt=\"\" />\n        <div>\n          <h2>Make your network work for you</h2>\n          <h4>\n            Secure, sharable links to help your network refer your next\n            investor, service provider or team member.\n          </h4>\n        </div>\n      </section>\n\n      {/* to be deleted eventually */}\n      {/* <section className=\"questions\">\n                <Slider {...settings}>\n                    <div>\n                        <QuestionOne />\n                    </div>\n                    <div>\n                        <QuestionTwo />\n                    </div>\n                    <div>\n                        <QuestionThree />\n                    </div>\n                </Slider>\n            </section> */}\n      {/* to be deleted eventually */}\n\n      <section className=\"cta\">\n        {/* <h5>AskRefer empowers your network to search for the right person</h5> */}\n        <Button text={CTA_TEXT} onClick={onClickButton} />\n      </section>\n    </div>\n  );\n}\n","/**\n * Module containg all functions for API requests which are going to be made\n */\nimport axios from \"axios\";\nimport { getToken } from \"@/api/cache\";\n\n\n/**\n * dynamically select the url to use for the backend\n * depending on if were working locally or building for deployment\n */\n// TODO change to use .env and .env.prod respectively\nconst REMOTE_URL = \"https://askrefer-backend.herokuapp.com\";\nexport const BASE = \n     !process.env.NODE_ENV || process.env.NODE_ENV === \"development\"\n         ? \"http://localhost:8000\"\n         : REMOTE_URL;\n\n/**\n * dynamically get the tokens for every API call\n * @param {String} token The token which would enable the user access protected routes\n */\nconst getHeader = () => ({\n    \"Content-Type\": \"application/json\"\n});\n\n/**\n * Make a post request to the server using the stored token in the database\n * @param {String} path The path we wish to make a post request to\n * @param {Object} obj The payload of the post request in the form of an object\n * @returns {Promise}\n */\nexport const postReq = async (path, obj) => {\n    try {\n        const response = await axios.post(BASE + path, obj, {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        return response;\n    } catch (error) {\n        throw error;\n    }\n};\n\n/**\n * Make a get request from the server using the token in the databasr\n * @param {*} path The path we wish to make a post request to\n * @returns {Promise}\n */\nexport const getReq = async (path) => {\n    try {\n        const response = await axios.get(BASE + path);\n        return response;\n    } catch (error) {\n        throw error;\n    }\n};\n","export default __webpack_public_path__ + \"static/media/closeIcon.60cd9331.svg\";","import React from \"react\";\nimport { useClickAway } from \"react-use\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Document, Page } from \"react-pdf/dist/esm/entry.webpack\";\nimport CloseIcon from \"@/assets/svgs/closeIcon.svg\";\n\nconst PdfViewer = ({ url, onClose, open }) => {\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [loaded, setLoaded] = useState(false);\n  const pdfRef = useRef(null);\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setLoaded(true);\n  }\n  useClickAway(pdfRef, onClose);\n\n  const nextPage = () => setPageNumber((p) => p + 1);\n  const previousPage = () => setPageNumber((p) => p - 1);\n  const isNextPage = pageNumber < numPages;\n  const isPreviousPage = pageNumber > 1;\n\n  if (!open) return <></>;\n  return (\n    <div className=\"pdf__viewercontainer\">\n      <img src={CloseIcon} onClick={onClose} className=\"close__icon\" />\n      <div ref={pdfRef}>\n        <Document file={url} onLoadSuccess={onDocumentLoadSuccess}>\n          <Page pageNumber={pageNumber} />\n        </Document>\n        {numPages && (\n          <div className=\"pagination__wrapper\">\n            <div className=\"navigation\">\n              {isPreviousPage && <span style={{zIndex: 10000}} onClick={previousPage}>previous page</span>}\n              {isNextPage && <span style={{zIndex: 10000}} onClick={nextPage}>next page</span>}\n            </div>\n            <div className=\"pages\">\n              Page {pageNumber} of {numPages}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PdfViewer;\n","import { useRef } from 'react';\nimport { useClickAway } from 'react-use';\nimport './styles.scss';\n\nexport default function Index({\n    open, toggleOpen, component: Component\n}) {\n    const overlayRef = useRef(null);\n    const className = `${open ? \"\" : \"--hidden\"}`;\n\n    // when they click away from the overlay itself, hide it\n    useClickAway(overlayRef, toggleOpen);\n    return (\n        <div className={className} id=\"overlay-component\">\n            <div ref={overlayRef} className=\"overlay-component__slider\">\n                <Component />\n            </div>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/happy.f29e89f5.png\";","import { useEffect, useState } from \"react\";\nimport Celebrate from \"@/assets/svgs/happy.png\";\nimport Button from \"@/components/button\";\nimport \"@/styles/input.scss\";\nimport \"./styles.scss\";\nimport { showErrorToast, showSuccessToast, validateEmail } from \"@/utilities\";\nimport { postReq } from \"@/api\";\n\nconst CTA_TEXT = \"Complete\";\nconst INITIAL_STATE = {\n  name: \"\",\n  email: \"\",\n  url: \"\",\n};\n\nexport default function Index({ onSubmit, user }) {\n  const [submitted, setSubmitted] = useState(true);\n  const [state, setState] = useState(INITIAL_STATE);\n  const [loading, setLoading] = useState(false);\n\n  const changeState = (e) => {\n    const { name, value } = e.target;\n    setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  useEffect(() => {\n    if (!user) return;\n    setState({ ...user });\n  }, [user]);\n\n  const recommendSelf = () => {\n    if (loading) return;\n    setLoading(true);\n    const referralId = window.location.href.split(\"/\").reverse()[0];\n    postReq(\"/referral/recommend\", {\n      referralKey: referralId,\n      user: {\n        fullName: state.name,\n        email: state.email,\n        linkedIn: state.url,\n      },\n    })\n      .then(({ data: response }) => {\n        const { error } = response;\n        if (error === \"ALREADY_APPLIED\") {\n          showErrorToast(\"You have already applied for this role, thank you!\");\n        } else {\n          showSuccessToast(\n            \"Your application was successfull, you will be contacted if you are a match!\"\n          );\n        }\n        // onSubmit();\n        setSubmitted(true);\n      })\n      .catch((err) => {\n        showErrorToast(\n          err.response?.data.error || \"There was an unknown error\"\n        );\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const validateState = () => {\n    const { name, email, url } = state;\n    if (!name) {\n      return showErrorToast(\n        \"Please fill in a name we can use to identify you!\"\n      );\n    }\n    if (!email) {\n      return showErrorToast(\n        \"Please fill in an email we can use to contact you!\"\n      );\n    }\n    if (!validateEmail(email)) {\n      return showErrorToast(\"Please fill in a valid email address\");\n    }\n  };\n\n  const allFieldsFilled =\n    state.name &&\n    state.email &&\n    // state.url &&\n    validateEmail(state.email);\n  // validateLinkedIn(state.url);\n  const buttonIsDisabled = !allFieldsFilled || loading;\n\n  return (\n    <div id=\"kyc-form\" className=\"slider-form\">\n      {!submitted ? (\n        <>\n          <div className=\"header-group\">\n            <h1 className=\"slider-form__header\">Awesome!</h1>\n\n            <h6 className=\"slider-form__subheader\">\n              We will share your details with the original poster. They will be\n              in touch if it is a match.\n            </h6>\n          </div>\n\n          <form action=\"javascript:void(0)\">\n            <div className=\"input__group\">\n              <label htmlFor=\"\">Name</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                onChange={changeState}\n                value={state.name}\n              />\n            </div>\n            <div className=\"input__group\">\n              <label htmlFor=\"\">Email</label>\n              <input\n                type=\"text\"\n                name=\"email\"\n                onChange={changeState}\n                value={state.email}\n              />\n            </div>\n            <div className=\"input__group\">\n              <label htmlFor=\"\">LinkedIn</label>\n              <input\n                type=\"text\"\n                name=\"url\"\n                onChange={changeState}\n                value={state.url}\n              />\n            </div>\n            <div onClick={validateState}>\n              <Button\n                text={CTA_TEXT}\n                onClick={recommendSelf}\n                loading={loading}\n                disabled={buttonIsDisabled}\n              />\n            </div>\n          </form>\n        </>\n      ) : (\n        <div className=\"postsubmit__section\">\n          <img src={Celebrate} />\n          <div className=\"text__section\">\n            <b>Awesome!</b>, We will share your interest with the original poster, and\n            they’ll be in touch if there’s a fit.\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useState, useRef, useEffect } from \"react\";\nimport { useClickAway } from \"react-use\";\n\nimport Button from \"@/components/button\";\nimport \"@/styles/input.scss\";\nimport \"./styles.scss\";\nimport {\n    copyToClipboard,\n    showErrorToast,\n    showSuccessToast,\n    validateEmail,\n} from \"@/utilities\";\nimport { postReq } from \"@/api\";\nimport CircularProgressSpinner from \"@/components/loader\";\n\nconst CTA_TEXT = \"Complete\";\nconst INITIAL_STATE = {\n    email: \"\",\n    url: \"\",\n};\n\nexport default function Index({ onSubmit, link, post, user }) {\n    const inputRef = useRef();\n    const dropdownRef = useRef();\n    const [state, setState] = useState(INITIAL_STATE);\n    const [loading, setLoading] = useState(false);\n    const [showDropdown, setShowDropdown] = useState(false);\n    const [attached, setAttached] = useState(false);\n\n    useEffect(() => {\n        setState({\n            ...user,\n            url: link,\n        });\n    }, [link]);\n\n    const closeDropdown = () => {\n        setShowDropdown(false);\n    };\n\n    useClickAway(dropdownRef, closeDropdown);\n\n    const renderDropdown = () => {\n        if(!state.email ){\n            return showErrorToast(\"Please fill in your email adress first!\");\n        }\n        if(!validateEmail(state.email)){\n            return showErrorToast(\"Please fill in a valid email adress!\");\n        }\n        if (state.url) {\n            setShowDropdown(true);\n        }\n    };\n\n    const changeState = (e) => {\n        const { name, value } = e.target;\n        setState((state) => ({\n            ...state,\n            [name]: value,\n        }));\n    };\n\n    function copyURLToClipboard() {\n        copyToClipboard(state.url, \"Link copied to clipboard\");\n    }\n\n    const validateInputs = () => {\n        console.log({state});\n        if (!state.email) {\n            return showErrorToast(\"Please input your email before you submit\");\n        }\n\n        if (!validateEmail(state.email)) {\n            return showErrorToast(\"Please enter a valid email address\");\n        }\n    };\n\n    function attachUserToURL(user) {\n        setLoading(true);\n        setAttached(true)\n        const referralId = link.split(\"/\").reverse()[0];\n        postReq(\"/referral/attach\", {\n            email: user.email,\n            referralKey: referralId,\n        })\n            .then((res) => {             \n                setAttached(true)\n            })\n            .catch((err) => {\n                console.log(\n                    err.response?.data.error || \"There was an unknown error attaching user to link\"\n                );\n                setAttached(false)\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }\n\n    useEffect(() => {\n        if(!link || attached || loading) return;\n        attachUserToURL(user);\n    },[link]);\n\n    const buttonDisabled =\n        !state.email || !validateEmail(state.email) || loading || !state.url;\n\n    return (\n        <div id=\"refer-form\" className=\"slider-form\">\n            <div className=\"header-group\">\n                <h1 className=\"slider-form__header\">Awesome!</h1>\n\n                <h6 className=\"slider-form__subheader\">\n                    Share this Url with them\n                </h6>\n            </div>\n\n            <form action=\"javascript:void(0)\">\n                <div className=\"input__group --refer\">\n                    <label htmlFor=\"\">Url link</label>\n                    <div className=\"refer_input__wrapper\">\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            placeholder=\"loading ... \"\n                            value={state.url}\n                            ref={inputRef}\n                            disabled\n                        />\n                        <div onClick={renderDropdown} className=\"copy-button\">\n                            {state.url ? (\n                                <h5>Tap to share</h5>\n                            ) : (\n                                <CircularProgressSpinner />\n                            )}\n                            {showDropdown ? (\n                                <div\n                                    ref={dropdownRef}\n                                    className=\"share-dropdown\"\n                                >\n                                    <h5\n                                        onClick={copyURLToClipboard}\n                                        className=\"item\"\n                                    >\n                                        <i\n                                            style={{ marginRight: \"10px\" }}\n                                            class=\"fas fa-copy\"\n                                        ></i>\n                                        copy link\n                                    </h5>\n                                    <h5 className=\"item\">\n                                        <a\n                                            id=\"whatsapp\"\n                                            className=\"share-button\"\n                                            data-action=\"share/whatsapp/share\"\n                                            href={`whatsapp://send?text=Hi! My friend is looking for ${post.title}. Can you help? ${state.url}`}\n                                            target=\"_blank\"\n                                        >\n                                            <i\n                                                style={{ marginRight: \"10px\" }}\n                                                class=\"fab fa-whatsapp\"\n                                            ></i>\n                                            whatsapp\n                                        </a>\n                                    </h5>\n                                    <h5 className=\"item\">\n                                        <a\n                                            id=\"linkedin\"\n                                            className=\"share-button\"\n                                            target=\"_blank\"\n                                            title=\"Share on LinkedIn\"\n                                            href={`https://www.linkedin.com/sharing/share-offsite/?url=${link}`}\n                                        >\n                                            <i\n                                                style={{ marginRight: \"10px\" }}\n                                                class=\"fab fa-linkedin\"\n                                            ></i>\n                                            linkedin\n                                        </a>\n                                    </h5>\n                                </div>\n                            ) : (\n                                \"\"\n                            )}\n                        </div>\n                    </div>\n                </div>\n                {/* <div className=\"input__group\">\n                    <label htmlFor=\"\">Email Address</label>\n                    <input\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Add your email to be notified if it's a match\"\n                        onChange={changeState}\n                        value={state.email}\n                    />\n                </div>\n                <div className=\"input__group\">\n                    <label htmlFor=\"\">Name</label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder=\"Add your name\"\n                        onChange={changeState}\n                        value={state.name}\n                    />\n                </div> */}\n                <div onClick={validateInputs}>\n                    <Button\n                        text={CTA_TEXT}\n                        onClick={onSubmit}\n                        disabled={buttonDisabled}\n                        loading={loading}\n                    />\n                </div>\n            </form>\n        </div>\n    );\n}\n","import moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { Document, Page } from \"react-pdf/dist/esm/entry.webpack\";\n\nimport Button from \"@/components/button\";\nimport { getReq, postReq } from \"@/api\";\nimport PdfViewer from \"@/components/pdfModal\";\nimport Overlay from \"@/components/overlay\";\nimport { showSuccessToast } from \"@/utilities\";\nimport { getAvatarDetails, gotoURL, showErrorToast } from \"@/utilities\";\n\nimport Match from \"./components/match\";\nimport Refer from \"./components/refer\";\nimport CircularProgressSpinner from \"../loader\";\n\nimport \"./styles.scss\";\n\nconst INITIAL_STATE = {\n  fullName: \"\",\n  title: \"\",\n  text: \"\",\n  url: \"\",\n  expiryDate: \"\",\n  creationDate: \"\",\n  postId: \"\",\n  referralId: \"\",\n  userUrl: \"\",\n  email: \"\",\n};\n\nconst TIMEOUT_DURATION = 1500;\nconst DEFAULT_SKELETON_HEIGHT = \"100px\";\n\nexport default function Index({ post, user, preview, onClose, onProceed, open }) {\n  const [showPdf, setShowPdf] = useState(false);\n  const [state, setState] = useState(INITIAL_STATE);\n  const [yes, setYes] = useState(false);\n  const [maybe, setMaybe] = useState(false);\n  const [loadingLink, setLoadingLink] = useState(false);\n  const [refLink, setrefLink] = useState(\"\");\n  const [stats, setStats] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const {\n      createdAt,\n      details,\n      expiryDate,\n      title,\n      url,\n      _id,\n      referralId,\n      owner: { fullName = \"\", url: userUrl = \"\", email },\n      owner,\n    } = post;\n    setState({\n      ...state,\n      fullName,\n      title: title,\n      text: details,\n      url: url,\n      expiryDate: expiryDate,\n      creationDate: createdAt,\n      referralId,\n      postId: _id,\n      userUrl,\n      email,\n    });\n  }, []);\n\n  // get the stats of the owner of this page\n  useEffect(() => {\n    if (!Boolean(state.email) || stats) return;\n    (async function fetchStatistics() {\n      const { email } = state;\n      const { data: stats } = await postReq(\"/user/statistics\", { email });\n      setStats(stats);\n    })();\n  }, [state]);\n  const avatarDetails = getAvatarDetails(state.fullName);\n\n  const onViewMore = () => {\n    setShowPdf(true);\n  };\n\n  const createPost = async () => {\n    if (loading) return;\n    setLoading(true);\n    try {\n      await onProceed();\n    } catch (err) {\n      showErrorToast(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const today = moment();\n  const creationDate = moment(state.creationDate);\n  const expiryDate = moment(state.expiryDate);\n  const timeDifferenceText = (dayDiff) => {\n    const expiresIn =\n      dayDiff === 0 ? \"Today\" : dayDiff === 1 ? \"1 day\" : `${dayDiff} days`;\n    return expiresIn;\n  };\n\n  const goHome = () => {\n    setTimeout(() => {\n      history.push(\"/\");\n    }, TIMEOUT_DURATION);\n  };\n\n  const generateReferral = () => {\n    const { referralId } = state;\n    if (loadingLink) return;\n    // generate a new link then set maybe\n    setLoadingLink(true);\n    setMaybe(true);\n    getReq(`/referral/refer/${referralId}`)\n      .then(({ data: response }) => {\n        const { link } = response;\n        setrefLink(link);\n      })\n      .catch((err) => {\n        showErrorToast(\n          err.response?.data.error || \"There was an unknown error\"\n        );\n      })\n      .finally(() => {\n        setLoadingLink(false);\n      });\n  };\n\n  const onSubmitYes = () => {\n    setYes(false);\n    goHome();\n  };\n\n  const onSubmitMaybe = () => {\n    showSuccessToast(\"We will be in touch. Thank you\");\n    setMaybe(false);\n    goHome();\n  };\n\n  const onSubmitNo = () => {\n    if (loadingLink) return;\n    showSuccessToast(\"Maybe next time. Thank you\");\n    goHome();\n  };\n\n  const gotoOwnerReference = () => {\n    if (!state.userUrl) return;\n    window.open(state.userUrl, \"_blank\");\n  };\n\n  const expiresIn = timeDifferenceText(expiryDate.diff(creationDate, \"day\"));\n  const postedAt = timeDifferenceText(today.diff(creationDate, \"day\"));\n  const isPdf = state.url && state.url.endsWith(\"pdf\");\n  // moment\n  return (\n    <div id=\"post-card\">\n      <div className=\"top-nav\">\n        {preview && <CloseIcon onClose={onClose} />}\n      </div>\n      <div className=\"content-body\">\n        <div className=\"poster_details\">\n          <div\n            style={{\n              backgroundColor: avatarDetails.color,\n              cursor: state.userUrl ? \"pointer\" : \"text\",\n            }}\n            onClick={gotoOwnerReference}\n            className=\"poster_details__img\"\n          >\n            <h4>{avatarDetails.initials}</h4>\n          </div>\n          <div className=\"extra_details\">\n            <h3\n              onClick={gotoOwnerReference}\n              style={{ cursor: state.userUrl ? \"pointer\" : \"text\" }}\n              className=\"poster_details__text\"\n            >\n              {state.fullName}\n            </h3>\n            <h6>Is looking for {state.title}</h6>\n          </div>\n        </div>\n\n        {/* section for the stats */}\n          <div>\n        {stats ? (\n            <div className=\"stats_details\">\n              <div className=\"one_detail\">\n                <h2> {stats.postcount} </h2>\n                <h5>Posts</h5>\n              </div>\n\n              <div className=\"one_detail\">\n                <h2> {stats.referralCount} </h2>\n                <h5>Referrals</h5>\n              </div>\n\n              <div className=\"one_detail\">\n                <h2> {stats.totalAccepted} </h2>\n                <h5>Hires</h5>\n              </div>\n            </div>\n                    ) : (\n                      <Skeleton style={{ height: DEFAULT_SKELETON_HEIGHT }} />\n                    )}\n\n            <div className=\"action_details\">\n            <div\n                onClick={() => !preview && !loadingLink && setYes(true)}\n                className=\"action_button --yes\"\n              >\n                <h5>I’m interested. Please shortlist me</h5>\n              </div>\n              <div\n                onClick={() => !preview && generateReferral()}\n                className=\"action_button --maybe\"\n              >\n                <h5>I can refer someone else</h5>\n              </div>\n            </div>\n          </div>\n        {/* section for the stats */}\n\n        {/* section for the actual post */}\n        <div className=\"desire_details_wrapper\">\n          <div className=\"desire_details\">\n            <h4>More details</h4>\n            <h5>{state.text}</h5>\n          </div>\n        </div>\n        {/* section for the actual post */}\n\n        {/* section to display pdf attachments*/}\n        {isPdf ? (\n          <div className=\"attachment_details_wrapper\">\n            <div className=\"attachment_details\">\n              <h4>Attached Media</h4>\n              <div onClick={onViewMore} className=\"attachments\">\n                <Document file={state.url}>\n                  <Page pageNumber={1} />\n                </Document>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <></>\n        )}\n        {/* section to display pdfs */}\n      </div>\n\n      <Overlay\n        open={yes}\n        toggleOpen={() => yes && setYes(false)}\n        component={() => (\n          <Match\n            user={user}\n            postId={state.postId}\n            link={refLink}\n            onSubmit={onSubmitYes}\n          />\n        )}\n      />\n      {/* for maybe */}\n      <Overlay\n        open={maybe}\n        toggleOpen={() => maybe && setMaybe(false)}\n        component={() => (\n          <Refer\n            user={user}\n            link={refLink}\n            post={state}\n            onSubmit={onSubmitMaybe}\n          />\n        )}\n      />\n      {/* for vieweing pdf */}\n      {state.url && (\n        <PdfViewer\n          url={state.url}\n          open={showPdf}\n          onClose={() => setShowPdf(false)}\n        />\n      )}\n      {/* for vieweing pdf */}\n      {/* wrapper for button to submit when in preview mode */}\n      {preview && open ? (\n        <div className=\"endpreview__button\">\n          <Button\n            text=\"Publish Ask\"\n            onClick={createPost}\n            disabled={loading}\n            loading={loading}\n          />\n        </div>\n      ) : (\n        \"\"\n      )}\n      {/* wrapper for button to submit when in preview mode */}\n    </div>\n  );\n}\n\nconst CloseIcon = ({ onClose }) => (\n  <div onClick={onClose} className=\"close__icon\">\n    <svg\n      width=\"13\"\n      height=\"13\"\n      viewBox=\"0 0 13 13\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M6.5 5.05578L11.5558 0L13 1.44422L7.94422 6.5L13 11.5558L11.5558 13L6.5 7.94422L1.44422 13L0 11.5558L5.05578 6.5L0 1.44422L1.44422 0L6.5 5.05578Z\"\n        fill=\"#000\"\n      />\n    </svg>\n  </div>\n);\n","import { useState } from \"react\";\nimport PostCard from \"@/components/postcard\";\nimport Overlay from \"@/components/overlay\";\n\nimport Button from \"@/components/button\";\nimport \"@/styles/input.scss\";\n\nimport \"./styles.scss\";\nimport { copyToClipboard, showErrorToast } from \"@/utilities\";\nimport { LINKEDIN_REGEXP } from \"@/utilities/constants\";\nimport { postReq } from \"@/api\";\n\nconst CTA_TEXT = \"Preview Ask\";\n\n\n\nexport default function Index({ postState, state, setState }) {\n  const [link, setLink] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [openOverlay, setOpenOverLay] = useState(false);\n\n  const changeState = (e) => {\n    const { name, value } = e.target;\n    setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  const renderIconAndText = () => {\n    return (\n      <span>\n        <i style={{ marginRight: \"10px\" }} class=\"fas fa-copy\"></i>\n        Copy Referral Link\n      </span>\n    );\n  };\n\n  const submitPost = () => {\n    const payload = {\n      post: postState,\n      user: {\n        fullName: state.name,\n        email: state.email,\n        linkedIn: state.url,\n      },\n    };\n    return postReq(\"/post/create\", payload)\n      .then(({ data: response }) => {\n        const { referralLink } = response;\n        setLink(referralLink);\n        copyToClipboard(referralLink);\n        setOpenOverLay(false);\n      })\n      .catch((err) => {\n        showErrorToast(\n          err.response?.data.error || \"There was an unknown error\"\n        );\n      });\n  };\n\n  const copyReferralLink = () => {\n    const message = \"Your referral link has been copied to your clipboard.\";\n    copyToClipboard(link, message);\n  };\n\n  const validateFields = () => {\n    const { name, email, url } = state;\n    if (!name) {\n      return showErrorToast(\n        \"Please fill in a name we can use to identify you!\"\n      );\n    }\n    if (!email) {\n      return showErrorToast(\n        \"Please fill in an email we can use to contact you!\"\n      );\n    }\n    if (url && !LINKEDIN_REGEXP.exec(url)) {\n      return showErrorToast(\"Please enter a valid linkedIn profile URL\");\n    }\n  };\n\n  const allFieldsFilled =\n    state.name && state.email && (state.url\n      ? LINKEDIN_REGEXP.exec(state.url)\n      : true);\n\n  const buttonIsDisabled = !allFieldsFilled;\n\n  return (\n    <div id=\"kyc-form\" className=\"slider-form\">\n      <div className=\"header-group\">\n        <h1 className=\"slider-form__header\">\n          {!link\n            ? \"Tell us more about you\"\n            : \"Great! Now let’s share your request\"}\n        </h1>\n\n        <h6 className=\"slider-form__subheader\">\n          {!link\n            ? \"This allows AskRefer to update you on the progress of your request\"\n            : \"Copy and share your referral link or share across LinkedIn or WhatsApp\"}\n        </h6>\n      </div>\n\n      <form action=\"javascript:void(0)\">\n        {!link ? (\n          <>\n            <div className=\"input__group\">\n              <label htmlFor=\"\">Name</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"\"\n                onChange={changeState}\n                value={state.name}\n                disabled={loading || link}\n              />\n            </div>\n            <div className=\"input__group\">\n              <label htmlFor=\"\">Email</label>\n              <input\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"\"\n                onChange={changeState}\n                value={state.email}\n                disabled={loading || link}\n              />\n            </div>\n            <div className=\"input__group\">\n              <label htmlFor=\"\">Linkedin</label>\n              <input\n                type=\"text\"\n                name=\"url\"\n                onChange={changeState}\n                value={state.url}\n                disabled={loading || link}\n              />\n            </div>\n          </>\n        ) : (\n          \"\"\n        )}\n        <div onClick={validateFields}>\n          {!link ? (\n            <Button\n              text={CTA_TEXT}\n              onClick={() => setOpenOverLay(true)}\n              disabled={buttonIsDisabled}\n            />\n          ) : (\n            <div className=\"link\">\n              <>\n                <a\n                  id=\"linkedin\"\n                  className=\"share-button\"\n                  target=\"_blank\"\n                  title=\"Share on LinkedIn\"\n                  href={`https://www.linkedin.com/sharing/share-offsite/?url=${link}`}\n                >\n                  <i class=\"fab fa-linkedin\"></i>\n                  <h4>Share on LinkedIn</h4>\n                </a>\n                <a\n                  id=\"whatsapp\"\n                  className=\"share-button\"\n                  data-action=\"share/whatsapp/share\"\n                  href={`whatsapp://send?text=Hi! I’m looking for a ${postState.title.toLowerCase()}.  Can you help? ${link}`}\n                  target=\"_blank\"\n                >\n                  <i class=\"fab fa-whatsapp\"></i>\n                  <h4>Share on Whatsapp</h4>\n                </a>\n                <Button text={renderIconAndText()} onClick={copyReferralLink} />\n              </>\n            </div>\n          )}\n        </div>\n      </form>\n      <Overlay\n        open={openOverlay}\n        toggleOpen={() => setOpenOverLay(false)}\n        component={() => (\n          <PostCard\n            post={{\n              ...postState,\n              owner: {\n                fullName: state.name,\n                url: state.url,\n                email: state.email,\n              },\n            }}\n            user={{}}\n            preview\n            onClose={() => setOpenOverLay(false)}\n            onProceed={submitPost}\n            open={openOverlay}\n          />\n        )}\n      />\n    </div>\n  );\n}\n","import { useState, useRef } from \"react\";\nimport Toggle from \"react-toggle\";\nimport { TagsInput } from \"react-tag-input-component\";\n\nimport PostCard from \"@/components/postcard\";\nimport Overlay from \"@/components/overlay\";\nimport Button from \"@/components/button\";\nimport { showErrorToast } from \"@/utilities\";\n\nimport Kyc from \"./components/kyc\";\nimport \"./styles.scss\";\n\nconst INITIAL_STATE = {\n  desire: \"\",\n  details: \"\",\n  url: \"\",\n  duration: 1000, //set an arbitrarily large deadline, because we no longer use deadlines\n  public: true,\n  allowedEmails: [],\n};\n\nconst KYC_INITIAL_STATE = {\n  name: \"\",\n  email: \"\",\n  url: \"\",\n};\n\nconst CTA_TEXT = \"Proceed\";\n\nexport default function Index() {\n  const [state, setState] = useState(INITIAL_STATE);\n  const [kycState, setKycState] = useState(KYC_INITIAL_STATE);\n  const [openOverlay, setOpenOverlay] = useState(false);\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n\n  const updateState = (name, value) => {\n    setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  const validateForm = () => {\n    const { desire, details } = state;\n\n    if (!desire) {\n      return showErrorToast(\"Please supply what you are looking for.\");\n    }\n    if (!details) {\n      return showErrorToast(\n        \"Please supply more details to better explain your request.\"\n      );\n    }\n  };\n\n  const buttonIsDisabled = !(state.desire && state.details);\n\n  const formatState = () => ({\n    title: state.desire,\n    details: state.details,\n    durationInWeeks: state.duration,\n    url: formatURL(state.url), //make sure urls not preceeded by http/https are rectified so as not to cause errors\n    accessControlMode: state.public ? \"public\" : \"private\",\n    allowedEmails: state.allowedEmails,\n  });\n\n  const formatURL = (url) => {\n    if (!url) return \"\";\n    if (url.startsWith(\"http://\") || url.startsWith(\"https://\")) {\n      return url;\n    }\n    return `http://${url}`;\n  };\n\n  const gotoSecondState = async () => {\n    setLoading(true);\n    //upload an image to cloundinary\n    if(file){\n      await uploadImage();\n    }\n    setLoading(false);\n    setOpenOverlay(true);\n  };\n\n  const uploadImage = async () => {\n    const data = new FormData();\n    data.append(\"file\", file);\n    data.append(\"upload_preset\", \"askrefer\");\n    data.append(\"cloud_name\", \"xand6r\");\n\n    await fetch(\"https://api.cloudinary.com/v1_1/xand6r/image/upload\", {\n      method: \"post\",\n      body: data,\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        updateState(\"url\", data.url);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const inputRef = useRef(null);\n\n  return (\n    <div id=\"post-page\">\n      <div className=\"post-title\">\n        <h2>Create an Ask</h2>\n        <h5>\n          Tell us who you’re looking for and attach any supporting documents\n        </h5>\n      </div>\n      <div className=\"textarea-group\">\n        <h4 className=\"label\">Title</h4>\n        <textarea\n          name=\"desire\"\n          id=\"\"\n          rows=\"1\"\n          maxLength=\"50\"\n          onChange={(e) => updateState(e.target.name, e.target.value)}\n          value={state.desire}\n          placeholder=\"Hint: A top tier VC with space technology experience\"\n        ></textarea>\n      </div>\n\n      <div className=\"textarea-group\">\n        <h4 className=\"label\" htmlFor=\"details\">\n          Summary\n        </h4>\n        <textarea\n          name=\"details\"\n          id=\"\"\n          cols=\"30\"\n          rows=\"10\"\n          onChange={(e) => updateState(e.target.name, e.target.value)}\n          value={state.details}\n          placeholder=\"Hint: Our company, SpaceX, is raising a $500M round. We’re targeting a huge market, have great traction, and have already secured two term sheets. We’re searching for spacetech investors who might be a good fit\"\n        ></textarea>\n      </div>\n\n      <div className=\"textarea-group\">\n        <h4 className=\"label\" htmlFor=\"url\">\n          PDF attachment\n        </h4>\n        <div\n          className={`upload-wrapper __${file && \"active\"}`}\n          onClick={() => {\n            inputRef.current.click();\n          }}\n        >\n          {!file ? <h5>Supporting documents if available (PDF only)</h5> : \"\"}\n        </div>\n        {/* hidden input for  file upload shadow */}\n        <input\n          onChange={(e) => {\n            const file = e.target.files[0];\n            const { type } = file;\n            if (type === \"application/pdf\") {\n              setFile(file);\n            } else {\n              showErrorToast(`Invalid file type: ${type}, please upload a csv`);\n            }\n          }}\n          style={{ display: \"none\" }}\n          type=\"file\"\n          ref={inputRef}\n        />\n        <div className=\"filename\">{file?.name}</div>\n      </div>\n\n      <div className=\"textarea-group\">\n        <div className=\"access-control-wrapper\">\n          <h4 className=\"\" htmlFor=\"details\">\n            Who can view my Ask?\n          </h4>\n          <div>\n            <Toggle\n              defaultChecked={state.public}\n              icons={false}\n              onChange={() => {\n                updateState(\"public\", !state.public);\n              }}\n            />\n            <span>public access - {state.public ? \"on\" : \"off\"}</span>\n          </div>\n        </div>\n        {!state.public ? (\n          <TagsInput\n            value={state.allowedEmails}\n            onChange={(val) => updateState(\"allowedEmails\", val)}\n            name=\"fruits\"\n            placeHolder=\"Invite people by mail\"\n            seprators={[\"Enter\", \" \", \",\"]}\n          />\n        ) : (\n          <></>\n        )}\n      </div>\n\n      <div onClick={validateForm} className=\"submit-button\">\n        <Button\n          text={CTA_TEXT}\n          onClick={gotoSecondState}\n          disabled={buttonIsDisabled}\n          loading={loading}\n        />\n      </div>\n      <Overlay\n        open={openOverlay}\n        toggleOpen={() => openOverlay && setOpenOverlay(false)}\n        component={() => <Kyc state={kycState} setState={setKycState} postState={formatState()} />}\n      />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/pagenotfound.9444914f.svg\";","import { useHistory } from \"react-router\";\n\nimport notFoundImage from \"@/assets/svgs/pagenotfound.svg\";\nimport \"./style.scss\";\n\nexport default function Index() {\n    const history = useHistory();\n\n    const goHome = () => {\n        history.push(\"/\");\n    };\n\n    return (\n        <div className=\"notFound\">\n            <img src={notFoundImage} alt=\"\" />\n            <h1>Resource not found. <span onClick={goHome}>Go home</span></h1>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/interview.e05c9bbf.svg\";","import { useState } from \"react\";\n\nimport Button from \"@/components/button\";\nimport \"@/styles/input.scss\";\nimport \"./styles.scss\";\nimport {\n  showErrorToast,\n  showSuccessToast,\n  validateEmail,\n  validateLinkedIn,\n} from \"@/utilities\";\nimport { LINKEDIN_REGEXP } from \"@/utilities/constants\";\nimport { postReq } from \"@/api\";\nimport { useHistory } from \"react-router\";\n\nconst CTA_TEXT = \"Proceed\";\nconst INITIAL_STATE = {\n  name: \"\",\n  email: \"\",\n  url: \"\",\n  code: \"\",\n};\n\nexport default function Index({ onSubmit, setError }) {\n  const history = useHistory();\n  const [state, setState] = useState(INITIAL_STATE);\n  const [loading, setLoading] = useState(false);\n  const [stage, setStage] = useState(0);\n  const [post, setPost] = useState(null);\n\n  const changeState = (e) => {\n    const { name, value } = e.target;\n    setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  const authenticateUser = () => {\n    if (loading) return;\n    setLoading(true);\n\n    if (stage) {\n      // verify if the code is equal to the actual code\n      // <ALEX></ALEX>\n      if (post.key === state.code) {\n        setTimeout(() => {\n          setLoading(false);\n          onSubmit(post.data, state);\n        }, 1500);\n      } else {\n        setTimeout(() => {\n          showErrorToast(\"Incorrect code!\");\n          setLoading(false);\n        }, 1000);\n      }\n      return;\n    }\n    const referralId = window.location.href.split(\"/\").reverse()[0];\n    const completeState = {\n      email: state.email,\n      referralId,\n    };\n\n    postReq(\"/post/validateaccess\", {\n      ...completeState,\n    })\n      .then(({ data: response }) => {\n        const { status, data, message, error } = response;\n        if (error) {\n          setError(error);\n        }\n        if (status === \"ERROR\") {\n          return showErrorToast(message, {\n            autoClose: 5000,\n          });\n        }\n        if (data.accessControlMode === \"public\") {\n          return onSubmit(data, state);\n        }\n        setStage(1);\n        setPost(response);\n      })\n      .catch((err) => {\n        showErrorToast(\n          err.response?.data.error || \"There was an unknown error\"\n        );\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const validateState = () => {\n    const { email, name } = state;\n    if (!email) {\n      return showErrorToast(\n        \"Please fill in an email we can use to contact you!\"\n      );\n    }\n    if (!validateEmail(email)) {\n      return showErrorToast(\"Please fill in a valid email address\");\n    }\n    if (!name) {\n      return showErrorToast(\"Please fill in a valid name\");\n    }\n  };\n\n  const allFieldsFilled =\n    state.email && state.name && validateEmail(state.email);\n  // validateLinkedIn(state.url);\n  const buttonIsDisabled = !allFieldsFilled || loading;\n\n  return (\n    <div id=\"preview-form\" className=\"slider-form\">\n      <div className=\"header-group\">\n        <h1 className=\"slider-form__header\">Welcome!</h1>\n\n        {!stage ? (\n          <h6 className=\"slider-form__subheader\">\n            AskRefer is tool to securely indicate your interest in an opportunity, or refer it to someone else who might be a better fit.<br /><br />\n            <i>Before proceeding, we need to double-check that you’re approved to view this opportunity. Please enter your details below.</i>\n          </h6>\n        ) : (\n          <h6 className=\"slider-form__subheader\">\n            Please check your email for a five digit code to access the post\n          </h6>\n        )}\n      </div>\n\n      <form action=\"javascript:void(0)\">\n        {!stage ? (\n          <>\n            <div className=\"input__group\">\n              <label htmlFor=\"\">Name</label>\n              <span className=\"input__group__subtitle\">\n                This will only be visible to approved viewers of your Ask{\" \"}\n              </span>\n              <input\n                type=\"text\"\n                name=\"name\"\n                onChange={changeState}\n                value={state.name}\n                placeholder=\"Hint: Elon Musk\"\n              />\n            </div>\n            <div className=\"input__group\">\n              <label htmlFor=\"\">Email</label>\n              <span className=\"input__group__subtitle\">\n                This won’t be shared publicly, and will only be used to update\n                you on your search\n              </span>\n              <input\n                type=\"text\"\n                name=\"email\"\n                onChange={changeState}\n                value={state.email}\n                placeholder=\"Hint: elon.musk@spacex.com \"\n              />\n            </div>\n            <div className=\"input__group\">\n              <label htmlFor=\"\">LinkedIn (optional)</label>\n              <span className=\"input__group__subtitle\">\n                Adding your LinkedIn profile helps improve engagement on your\n                search\n              </span>\n              <input\n                type=\"text\"\n                name=\"url\"\n                onChange={changeState}\n                value={state.url}\n                placeholder=\"Hint: https://linkedin.com/in/rocketman\"\n              />\n            </div>\n          </>\n        ) : (\n          <div className=\"input__group\">\n            <label htmlFor=\"\">Code</label>\n            <input\n              type=\"text\"\n              name=\"code\"\n              onChange={changeState}\n              value={state.code}\n            />\n          </div>\n        )}\n        <div onClick={validateState}>\n          <Button\n            text={CTA_TEXT}\n            onClick={authenticateUser}\n            loading={loading}\n            disabled={buttonIsDisabled}\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/brokenlink.d2960b0e.svg\";","import { useHistory } from \"react-router\";\n\nimport brokenLink from \"@/assets/svgs/brokenlink.svg\";\nimport \"./style.scss\";\n\nexport default function Index() {\n    const history = useHistory();\n\n    const goHome = () => {\n        history.push(\"/\");\n    };\n\n    return (\n        <div className=\"expired\">\n            <img src={brokenLink} alt=\"\" />\n            <h1>\n                This post has expired. <span onClick={goHome}>Go home</span>\n            </h1>\n        </div>\n    );\n}\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Skeleton from \"react-loading-skeleton\";\n\nimport Error404 from \"@/pages/notFound\";\nimport { showErrorToast } from \"@/utilities\";\nimport PostCard from \"@/components/postcard\";\nimport interviewImage from \"@/assets/svgs/interview.svg\";\nimport Button from \"@/components/button\";\nimport Preview from \"@/components/postcard/components/preview\";\nimport Overlay from \"@/components/overlay\";\n\nimport { getReq } from \"@/api\";\n\nimport ExpiredPage from \"./components/expired\";\nimport \"./styles.scss\";\n\nconst CTA_TEXT = \"Post an Ask\";\nconst DEFAULT_SKELETON_HEIGHT = \"225px\";\n\nexport default function Index(props) {\n  const history = useHistory();\n  const [loading, setLoading] = useState(true);\n  const [post, setPost] = useState({});\n  const [error, setError] = useState(\"\");\n  const [previewOpen, setPreviewOpen] = useState(true);\n  const [user, setUser] = useState(null);\n\n  const paramId = props.match.params.id;\n\n  const gotoCreatePost = () => {\n    history.push(\"/post\");\n  };\n\n  if (error === \"NOT_FOUND\") {\n    return <Error404 />;\n  }\n\n  if (error === \"EXPIRED\") {\n    return <ExpiredPage />;\n  }\n\n  return (\n    <div id=\"referral-page\">\n      {loading ? (\n        <Skeleton style={{ height: DEFAULT_SKELETON_HEIGHT }} />\n      ) : (\n        <PostCard post={post} user={user} />\n      )}\n      {/* <img src={interviewImage} alt=\"poster\" className=\"poster-image\" /> */}\n      <div className=\"post-ask\">\n        <Button text={CTA_TEXT} onClick={gotoCreatePost} />\n      </div>\n\n      {/* section for the identity verification footer */}\n      <Overlay\n        open={previewOpen}\n        toggleOpen={() => false}\n        component={() => (\n          <Preview\n            onSubmit={(post, user) => {\n              setPost({ ...post, referralId: paramId });\n              setUser(user)\n              setLoading(false);\n              setPreviewOpen(false)\n            }}\n            setError={setError}\n          />\n        )}\n      />\n    </div>\n  );\n}\n","import \"./styles.scss\";\nimport React, { useState } from \"react\";\nimport randomColor from \"randomcolor\"; // import the script\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  Label,\n} from \"recharts\";\n\nexport default function BarChartComponent({\n  columnName = \"\",\n  columnLabel = \"\",\n  chartLabel = \"\",\n  data = [],\n}) {\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      <BarChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          angle={-25}\n          textAnchor=\"end\"\n          minTickGap={-12}\n          // axisLine={false}\n          dataKey=\"name\"\n          height={80}\n          tick={{ fontSize: 12 }}\n        >\n          <Label\n            value={chartLabel}\n            offset={0}\n            position=\"insideBottom\"\n          />\n        </XAxis>\n        <YAxis width={20} />\n        <Tooltip />\n        <Legend verticalAlign=\"top\" align=\"right\" />\n        <Bar\n          name={columnLabel}\n          dataKey={columnName}\n          stackId=\"a\"\n          fill={randomColor({ seed: columnName })}\n        />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n","import \"./styles.scss\";\nimport React, { useState } from \"react\";\nimport randomColor from \"randomcolor\"; // import the script\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  Label,\n} from \"recharts\";\n\nexport default function BarChartComponent({\n  columnName = \"\",\n  columnLabel = \"\",\n  chartLabel = \"\",\n  data = [],\n}) {\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      <BarChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          angle={-15}\n          textAnchor=\"end\"\n          minTickGap={-120}\n          // axisLine={false}\n          dataKey=\"name\"\n          height={80}\n          tick={{ fontSize: 12 }}\n        >\n          <Label\n            value={chartLabel}\n            offset={0}\n            position=\"insideBottom\"\n          />\n        </XAxis>\n        <YAxis width={20} />\n        <Tooltip />\n        <Legend verticalAlign=\"top\" align=\"right\" />\n        <Bar\n          name={columnLabel}\n          dataKey={columnName}\n          stackId=\"a\"\n          fill={randomColor({ seed: columnName })}\n        />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport Button from \"@/components/button\";\nimport \"@/styles/input.scss\";\n\nimport \"./styles.scss\";\n\nconst CTA_TEXT = \"Delete Ask\";\n\n\nexport default function Index({ onSubmit, loading }) {\n\n  return (\n    <div id=\"kyc-form\" className=\"slider-form\">\n      <div className=\"header-group\">\n        <h1 className=\"slider-form__header\">Delete your ask</h1>\n\n        <h6 className=\"slider-form__subheader\">\n          Are you sure you want to delete your ask, this action cannot be reversed.\n        </h6>\n      </div>\n\n      <form action=\"javascript:void(0)\">\n        <Button\n          text={CTA_TEXT}\n          onClick={onSubmit}\n          loading={loading}\n        />\n      </form>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport Button from \"@/components/button\";\nimport \"@/styles/input.scss\";\n\nimport \"./styles.scss\";\nimport { copyToClipboard, showErrorToast } from \"@/utilities\";\nimport { LINKEDIN_REGEXP } from \"@/utilities/constants\";\nimport { postReq } from \"@/api\";\n\nconst CTA_TEXT = \"Save\";\n\nconst INITIAL_STATE = {\n  details: \"\",\n  title: \"\",\n};\n\nexport default function Index({ postState, onSuccess, onClose }) {\n  const [state, setState] = useState(INITIAL_STATE);\n  const [postId, setPostId] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if(!postState) return;\n    setState({\n      title: postState.title,\n      details: postState.details\n    });\n    setPostId(postState._id);\n  }, [postState]);\n\n  const changeState = (e) => {\n    const { name, value } = e.target;\n    setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  const submitPost = () => {\n    if (loading) return;\n    if(!state.title){\n      return showErrorToast(\"Please fill in a title\");\n    }\n    if(!state.details){\n      return showErrorToast(\"Please fill in more details\");\n    }\n    setLoading(true);\n    const payload = {\n      postId: postId,\n      newDetails: {\n        title: state.title,\n        details: state.details\n    }\n    };\n    postReq(\"/post/edit\", payload)\n      .then(() => {\n        showErrorToast(\"your ask has been sucesfully edited\");\n        onSuccess();\n      })\n      .catch((err) => {\n        showErrorToast(\n          err.response?.data.error || \"There was an unknown error\"\n        );\n      })\n      .finally(() => {\n        setLoading(false);\n        onClose();\n      });\n  };\n\n  const validateFields = () => {\n    const { name, email, url } = state;\n    if (!name) {\n      return showErrorToast(\n        \"Please fill in a name we can use to identify you!\"\n      );\n    }\n    if (!email) {\n      return showErrorToast(\n        \"Please fill in an email we can use to contact you!\"\n      );\n    }\n    if (url && !LINKEDIN_REGEXP.exec(url)) {\n      return showErrorToast(\"Please enter a valid linkedIn profile URL\");\n    }\n  };\n\n  const allFieldsFilled =\n    state.name && state.email && state.url\n      ? LINKEDIN_REGEXP.exec(state.url)\n      : true;\n  const buttonIsDisabled = !allFieldsFilled || loading;\n\n  return (\n    <div id=\"kycf-form\" className=\"slider-form\">\n      <div className=\"header-group\">\n        <h1 className=\"slider-form__header\">Edit post</h1>\n\n        <h6 className=\"slider-form__subheader\">\n          Edit the title and content of your post\n        </h6>\n      </div>\n\n      <form action=\"javascript:void(0)\">\n          <>\n            <div className=\"input__group\">\n              <label htmlFor=\"\">Title</label>\n              <input\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"\"\n                onChange={changeState}\n                value={state.title}\n                disabled={loading}\n              />\n            </div>\n            <div className=\"textarea-group\">\n              <label htmlFor=\"\">Summary</label>\n              <textarea\n                name=\"details\"\n                id=\"\"\n                rows=\"1\"\n                maxLength=\"50\"\n                placeholder=\"\"\n                onChange={changeState}\n                value={state.details}\n                disabled={loading}\n              />\n            </div>\n          </>\n        <div onClick={validateFields}>\n          <Button\n            text={CTA_TEXT}\n            onClick={submitPost}\n            loading={loading}\n            disabled={buttonIsDisabled}\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport './loader.scss';\n\n\nconst CircularProgressSpinner = () => {\n    return (\n        <div className=\"askrefer-circular-loader-blue\">\n            <div className=\"lds-ring\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    );\n};\n\nexport default CircularProgressSpinner;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Select from \"react-select\";\nimport { useClickAway } from \"react-use\";\n\nimport Error404 from \"@/pages/notFound\";\nimport { postReq, getReq } from \"@/api\";\nimport {\n  decodeToken,\n  validateEmail,\n  showErrorToast,\n  showSuccessToast,\n} from \"@/utilities\";\nimport Overlay from \"@/components/overlay\";\n\n// import required components\nimport DayBarChart from \"./components/dayBar\";\nimport UserBarChart from \"./components/referrerBar\";\nimport ConfirmDelete from \"./components/confirmDelete\";\nimport PostEditWindow from \"./components/editPost\";\n// import required components\n\nimport \"./styles.scss\";\nimport CircularBlueProgressSpinner from \"@/components/blueLoader\";\nimport CircularProgressSpinner from \"@/components/loader\";\nimport axios from \"axios\";\n\nconst DEFAULT_OPTIONS = [];\n\nexport default function Index({ match }) {\n  const [posts, setPosts] = useState(DEFAULT_OPTIONS);\n  const [allPosts, setAllPosts] = useState([]);\n  const [error, setError] = useState(null);\n  const [postsLoading, setPostsLoading] = useState(false);\n  const [value, setValue] = useState(null);\n  const [showDropdown, setShowDropdown] = useState(null);\n  const [openConfirmOverlay, setOpenConfirmOverlay] = useState(null);\n  const [openEditOverlay, setOpenEditOverlay] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const dropdownRef = useRef(null);\n  const selectedPost = allPosts.find((p) => p._id === value.value);\n\n  // state for the graphs\n  const [viewsByDay, setViewsByDay] = useState([]);\n  const [viewsByUser, setViewsByUser] = useState([]);\n  const [appliedCandidates, setAppliedCandidates] = useState([]);\n\n  useClickAway(dropdownRef, () => setShowDropdown(false));\n\n  const triggerError = () => {\n    setError(true);\n  };\n\n  const removeApplicant = (applicantId) => {\n    setAppliedCandidates(\n      appliedCandidates.filter((a) => a.email !== applicantId)\n    );\n  };\n\n  const rejectApplicant = async (link, userId) => {\n    await axios\n      .get(link)\n      .then((res) => {\n        showSuccessToast(\n          \"You have sucesfully rejected this applicant, they will be notified\"\n        );\n        removeApplicant(userId);\n      })\n      .catch((err) => {\n        console.log(err);\n        showErrorToast(\n          \"There was an error rejecting this candidate:\",\n          err.message\n        );\n      });\n  };\n\n  const acceptApplicant = async (link, userId) => {\n    await axios\n      .get(link)\n      .then((res) => {\n        showSuccessToast(\n          \"You have sucesfully accepted this applicant, they will be notified\"\n        );\n        removeApplicant(userId);\n      })\n      .catch((err) => {\n        console.log(err);\n        showErrorToast(\n          \"There was an error accepting this candidate:\",\n          err.message\n        );\n      });\n  };\n  const fetchViewsByDay = async (postId) => {\n    await postReq(\"/dashboard/viewsbyday\", {\n      postId,\n    })\n      .then(({ data }) => {\n        setViewsByDay(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const fetchViewsByUser = async (postId) => {\n    await postReq(\"/dashboard/viewsbyowner\", {\n      postId,\n    })\n      .then(({ data }) => {\n        setViewsByUser(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const fetchAppliedCandidates = async (postId) => {\n    await getReq(`/dashboard/applicants/${postId}`, {\n      postId,\n    })\n      .then(({ data }) => {\n        setAppliedCandidates(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  console.log(appliedCandidates);\n\n  const closeDownPost = () => {\n    if (loading) return;\n    setLoading(true);\n    getReq(`/post/close/${value.value}`)\n      .then(({ data }) => {\n        setLoading(false);\n        setOpenConfirmOverlay(false);\n        fetchInitialPost();\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n      });\n  };\n\n  const onEdit = () => {\n    setOpenEditOverlay(true);\n  };\n\n  const onClose = () => {\n    setOpenConfirmOverlay(true);\n  };\n  /**\n   * Run this function everytime the selected post is changed\n   * Fetch all the required statistics for the selected post\n   */\n  useEffect(() => {\n    (async function () {\n      if (!value || !value.value) return;\n      try {\n        const { value: postId } = value;\n        setPostsLoading(true);\n        // fetch all of the views by day\n        await fetchViewsByDay(postId);\n        // fetch all the views by user\n        await fetchViewsByUser(postId);\n        // fetch all shortlisted candidates\n        await fetchAppliedCandidates(postId);\n        setPostsLoading(false);\n      } catch (err) {\n        console.log(\"err\");\n        setPostsLoading(false);\n      }\n    })();\n  }, [value]);\n\n  /**\n   * decode the token from the url parameter\n   * Fetch all the active posts associated with this user from the backend\n   * and default selection to the first post\n   */\n  const fetchInitialPost = () => {\n    const userToken = match.params.token;\n    const { email } = decodeToken(userToken);\n    if (!email || !validateEmail(email)) {\n      triggerError();\n    }\n    if (postsLoading) return;\n    setPostsLoading(true);\n    //make important requests to get all the active posts of this user\n    postReq(\"/dashboard/activeposts\", {\n      email,\n    })\n      .then(({ data }) => {\n        const mappedData = data.map((datum) => ({\n          value: datum._id,\n          label: datum.title,\n        }));\n        setPosts(mappedData);\n        setValue(mappedData[0]);\n        setAllPosts(data);\n      })\n      .catch((err) => {\n        showErrorToast(err.message);\n      })\n      .finally(() => {\n        setPostsLoading(false);\n      });\n  };\n  useEffect(() => {\n    try {\n      fetchInitialPost();\n    } catch (err) {\n      triggerError();\n    }\n  }, []);\n\n  if (error) {\n    return <Error404 />;\n  }\n\n  const OneCandidate = ({ oac }) => {\n    const [loading, setLoading] = useState(false);\n\n    const actionApplicant = async (url, identifier, action) => {\n      if (loading) return;\n      setLoading(true);\n      try {\n        if (action === \"accept\") {\n          await acceptApplicant(url, identifier);\n        } else {\n          await rejectApplicant(url, identifier);\n        }\n      } catch (err) {\n        showErrorToast(\"There was an error:\", err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    return (\n      <div className=\"one__candidate\">\n        <span\n          className={\n            oac.url ? \"active__candidate candidate__name\" : \"candidate__name\"\n          }\n          onClick={() => {\n            oac.url && window.open(oac.url, \"_blank\");\n          }}\n        >\n          {oac.fullName}\n        </span>\n        <div className=\"candidate__actions\">\n          <span\n            onClick={() => actionApplicant(oac.acceptURL, oac.email, \"accept\")}\n            className=\"actions__accept\"\n          >\n            {loading ? <CircularProgressSpinner /> : \"Accept\"}\n          </span>\n          <span\n            onClick={() => actionApplicant(oac.rejectURL, oac.email, \"decline\")}\n            className=\"actions__reject\"\n          >\n            {loading ? <CircularProgressSpinner /> : \"Reject\"}\n          </span>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div id=\"dashboard-page\">\n      <div className=\"header__tab\">\n        <div className=\"header__select\">\n          <Select\n            isLoading={postsLoading}\n            placeholder=\"Select your post\"\n            options={posts}\n            isDisabled={postsLoading}\n            onChange={(newValue) => setValue(newValue)}\n            value={value}\n          />\n        </div>\n        <div className=\"header__dropdown\">\n          <i\n            onClick={() => setShowDropdown(true)}\n            class=\"fa fa-2x fa-bars\"\n            aria-hidden=\"true\"\n          ></i>\n          {showDropdown && (\n            <div ref={dropdownRef} className=\"options__dropdown\">\n              <div onClick={onEdit} className=\"dd-item\">\n                <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                <span>Edit Post</span>\n              </div>\n              <div onClick={onClose} className=\"dd-item\">\n                <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                <span>Delete Post</span>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* based on the selected item fetch the statistics */}\n\n      {/* fetch the details for the views by day breakdown */}\n      {postsLoading ? (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <CircularBlueProgressSpinner />\n        </div>\n      ) : (\n        <>\n          {viewsByDay.length ? (\n            <DayBarChart\n              columnName=\"views\"\n              columnLabel=\"views per day\"\n              chartLabel=\"Total views of posts per day\"\n              data={viewsByDay}\n            />\n          ) : (\n            \"\"\n          )}\n          {/* fetch the details for the views by day breakdown */}\n\n          {/* fetch the details for the views by referrer breakdown */}\n          {viewsByUser.length ? (\n            <div style={{ marginTop: \"20px\" }}>\n              <UserBarChart\n                columnName=\"views\"\n                columnLabel=\"views per referrrer\"\n                chartLabel=\"Views of posts per referrrer\"\n                data={viewsByUser}\n              />\n            </div>\n          ) : (\n            \"\"\n          )}\n          {/* fetch the details for the views by referrer breakdown */}\n\n          {/* display error messages */}\n          {!viewsByDay.length && !viewsByUser.length && (\n            <p style={{ textAlign: \"center\" }}>This Job has no views yet</p>\n          )}\n\n          {/* render details about the user who have applied  */}\n          <div className=\"candidates__applied\">\n            <p>Shortlist candidates</p>\n            {/* render list of all available candidates to shortlist */}\n            <div className=\"all__candidates\">\n              {appliedCandidates.map((oac) => (\n                <OneCandidate oac={oac} />\n              ))}\n              {!appliedCandidates.length && (\n                <p style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n                  This Job has no applicants yet\n                </p>\n              )}\n            </div>\n          </div>\n          {/* render details about the user who have applied  */}\n        </>\n      )}\n\n      {/* include the popup component */}\n      <Overlay\n        component={() => (\n          <ConfirmDelete onSubmit={closeDownPost} loading={loading} />\n        )}\n        open={openConfirmOverlay}\n        toggleOpen={() =>\n          openConfirmOverlay &&\n          !loading &&\n          setOpenConfirmOverlay(!openConfirmOverlay)\n        }\n      />\n      {/* include the popup component */}\n\n      {/* include overlay for editing posts */}\n      <Overlay\n        component={() => (\n          <PostEditWindow\n            onClose={() => setOpenEditOverlay(false)}\n            postState={selectedPost}\n            onSuccess={fetchInitialPost}\n          />\n        )}\n        open={openEditOverlay}\n        toggleOpen={() =>\n          openEditOverlay && !loading && setOpenEditOverlay(!openEditOverlay)\n        }\n      />\n      {/* include overlay for editing posts */}\n    </div>\n  );\n}\n","import { Switch, Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport ReactTooltip from 'react-tooltip';\n\n// import components\nimport NavBar from \"@/components/navbar\";\n// import pages\nimport LandingPage from \"@/pages/landing\";\nimport PostPage from \"@/pages/post\";\nimport ReferralPage from \"@/pages/referral\";\nimport DashboardPage from \"@/pages/dashboard\";\n\nimport \"@/styles/global.scss\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nexport default function Routes() {\n    return (\n        <>\n            <NavBar />\n            <Switch>\n                <Route exact path=\"/\" component={LandingPage} />\n                <Route exact path=\"/post\" component={PostPage} />\n                <Route path=\"/referral/:id\" component={ReferralPage} />\n                <Route path=\"/dashboard/:token\" component={DashboardPage}/>\n            </Switch>\n            <ToastContainer />\n            <ReactTooltip event=\"click\"  className=\"tooltip\"/>\n        </>\n    );\n}\n","import { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./routes\";\nimport \"@/styles/global.scss\";\n\n\nfunction App(props) {\n    return (\n        <Router>\n            <Routes />\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Layout from '@/components/layout';\nimport App from \"./App\";\n\n// import * as serviceWorker from \"@/workers/serviceWorker\";\n// import { subscribeUser, requestPermission } from \"@/workers/subscriptions\";\nimport reportWebVitals from \"@/workers/reportWebVitals\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Layout>\n            <App />\n        </Layout>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// uncomment when setting up real time notifications\n// serviceWorker.register();\n// requestPermission();\n// subscribeUser();\n"],"sourceRoot":""}