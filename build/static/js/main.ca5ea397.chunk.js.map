{"version":3,"sources":["assets/logo.jsx","utilities/constants.js","utilities/index.js","components/navbar/index.jsx","assets/svgs/desktopWIP.svg","pages/desktop/index.jsx","components/layout/index.jsx","assets/svgs/landingicon.svg","components/loader/index.jsx","components/button/index.jsx","pages/landing/components/questions/index.jsx","pages/landing/index.jsx","components/overlay/index.jsx","api/index.js","pages/post/components/kyc/index.jsx","pages/post/index.jsx","assets/svgs/pagenotfound.svg","pages/notFound/index.jsx","assets/svgs/closeIcon.svg","components/pdfModal/index.jsx","components/postcard/components/match/index.jsx","components/postcard/components/refer/index.jsx","components/postcard/index.jsx","assets/svgs/interview.svg","components/postcard/components/preview/index.jsx","assets/svgs/brokenlink.svg","pages/referral/components/expired/index.jsx","pages/referral/index.jsx","routes.jsx","App.jsx","workers/reportWebVitals.js","index.jsx"],"names":["Logo","xmlns","width","height","viewBox","id","data-name","transform","fill","font-size","font-family","font-weight","x","y","d","TOAST_INITIALIZERS","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","LINKEDIN_REGEXP","showErrorToast","text","params","toast","error","showSuccessToast","success","copyToClipboard","url","successMessage","navigator","clipboard","writeText","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","validateEmail","email","test","String","toLowerCase","NavBar","useEffect","message","URLSearchParams","window","location","search","get","to","Index","className","src","desktopImage","alt","Layout","children","useState","isMobile","setIsMobile","handleResizeScreen","useCallback","innerWidth","addEventListener","removeEventListener","CircularProgressSpinner","index","onClick","disabled","loading","QuestionOne","letter-spacing","QuestionTwo","QuestionThree","history","useHistory","Megaphone","infinite","speed","slidesToShow","slidesToScroll","autoplay","arrows","push","open","toggleOpen","Component","component","overlayRef","useRef","useClickAway","ref","BASE","postReq","path","obj","a","axios","post","headers","response","getReq","INITIAL_STATE","name","postState","state","setState","link","setLink","setLoading","changeState","e","target","buttonIsDisabled","exec","action","htmlFor","type","placeholder","onChange","title","href","class","data-action","style","marginRight","payload","user","fullName","linkedIn","then","referralLink","data","catch","err","finally","desire","details","duration","public","allowedEmails","openOverlay","setOpenOverlay","file","setFile","updateState","formatURL","startsWith","gotoSecondState","uploadImage","FormData","append","fetch","method","resp","json","console","log","inputRef","data-tip","rows","maxLength","cols","current","click","files","display","defaultChecked","icons","val","placeHolder","seprators","durationInWeeks","accessControlMode","notFoundImage","PdfViewer","onClose","numPages","setNumPages","pageNumber","setPageNumber","setLoaded","pdfRef","isNextPage","isPreviousPage","CloseIcon","onLoadSuccess","p","onSubmit","postId","referralId","split","reverse","referralKey","dropdownRef","showDropdown","setShowDropdown","attached","setAttached","res","attachUserToURL","buttonDisabled","expiryDate","creationDate","userUrl","showPdf","setShowPdf","yes","setYes","maybe","setMaybe","loadingLink","setLoadingLink","refLink","setrefLink","stats","setStats","createdAt","_id","owner","Boolean","avatarDetails","initials","firstName","lastname","color","randomColor","seed","getAvatarDetails","today","moment","timeDifferenceText","dayDiff","goHome","setTimeout","onSubmitYes","onSubmitMaybe","gotoOwnerReference","isPdf","diff","endsWith","backgroundColor","cursor","postcount","referralCount","totalAccepted","code","setError","stage","setStage","setPost","key","completeState","status","brokenLink","props","previewOpen","setPreviewOpen","setUser","paramId","match","Routes","exact","LandingPage","PostPage","ReferralPage","event","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ca5ea397.chunk.js","sourcesContent":["export default function Logo() {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"127.055\"\n            height=\"40.924\"\n            viewBox=\"0 0 97.055 31.924\"\n        >\n            <g\n                id=\"Group_9204\"\n                data-name=\"Group 9204\"\n                transform=\"translate(-15 -63.312)\"\n            >\n                <g\n                    id=\"Group_9572\"\n                    data-name=\"Group 9572\"\n                    transform=\"translate(-255 46.231)\"\n                >\n                    <text\n                        id=\"askrefer\"\n                        transform=\"translate(308 41.005)\"\n                        fill=\"#8584ff\"\n                        font-size=\"20\"\n                        font-family=\"Source Sans Pro, sans-serif\"\n                        font-weight=\"700\"\n                    >\n                        <tspan x=\"-37.02\" y=\"0\">\n                            ask\n                        </tspan>\n                        <tspan y=\"0\" fill=\"#fdc84e\">\n                            refer\n                        </tspan>\n                    </text>\n                    <g\n                        id=\"send_1_\"\n                        data-name=\"send (1)\"\n                        transform=\"translate(349.566 17.081)\"\n                    >\n                        <g id=\"Group_9437\" data-name=\"Group 9437\">\n                            <g id=\"Group_9436\" data-name=\"Group 9436\">\n                                <path\n                                    id=\"Path_13560\"\n                                    data-name=\"Path 13560\"\n                                    d=\"M16.767.174.293,8.5a.51.51,0,0,0-.12.086A.545.545,0,0,0,.081,8.7a.578.578,0,0,0-.059.139A.6.6,0,0,0,0,9a.611.611,0,0,0,.019.156.585.585,0,0,0,.057.141.545.545,0,0,0,.09.119A.506.506,0,0,0,.285,9.5l5.181,2.823L6.7,11.782l-.5,1.329,2.583,5.6a.549.549,0,0,0,.079.125.527.527,0,0,0,.108.1.5.5,0,0,0,.13.063.474.474,0,0,0,.288,0,.5.5,0,0,0,.128-.063.525.525,0,0,0,.108-.1.559.559,0,0,0,.08-.13L17.447.918A.5.5,0,0,0,17.474.6a.641.641,0,0,0-.151-.283.569.569,0,0,0-.259-.166.4.4,0,0,0-.3.027Z\"\n                                    fill=\"#fdc84e\"\n                                />\n                            </g>\n                        </g>\n                        <g\n                            id=\"Group_9439\"\n                            data-name=\"Group 9439\"\n                            transform=\"translate(4.817 6.913)\"\n                        >\n                            <g id=\"Group_9438\" data-name=\"Group 9438\">\n                                <path\n                                    id=\"Path_13561\"\n                                    data-name=\"Path 13561\"\n                                    d=\"M6.158.237A.651.651,0,0,0,5.943.083a.613.613,0,0,0-.489,0,.642.642,0,0,0-.215.151L0,5.8l.614.33.307.656L6.158,1.217A.693.693,0,0,0,6.3.988a.739.739,0,0,0,0-.522A.7.7,0,0,0,6.158.237Z\"\n                                    fill=\"#5a59ff\"\n                                />\n                            </g>\n                        </g>\n                    </g>\n                </g>\n            </g>\n        </svg>\n    );\n}\n","export const TOAST_INITIALIZERS = {\n    position: \"top-left\",\n    autoClose: 2000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n};\n\nexport const DATE_FORMAT = \"DD-MM-YYYY\";\nexport const REDIRECT_DELAY = 2000; //TIME IN MILLISECOND\nexport const LINKEDIN_REGEXP =\n    /(ftp|http|https):\\/\\/?((www|\\w\\w)\\.)?linkedin.com(\\w+:{0,1}\\w*@)?(\\S+)(:([0-9])+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n","/**\n * A repository of utility functions used throughout the application\n */\nimport { toast } from \"react-toastify\";\nimport randomColor from \"randomcolor\"; // import the script\nimport { LINKEDIN_REGEXP, TOAST_INITIALIZERS } from \"./constants\";\n\n/**\n * A utility function used to show an error toast\n */\nexport const showErrorToast = (text, params = {}) => {\n    toast.error(text, {...TOAST_INITIALIZERS, ...params});\n};\n\n/**\n * A utility function to show a success toast\n */\nexport const showSuccessToast = (text, params) => {\n    toast.success(text, {...TOAST_INITIALIZERS, ...params});\n};\n\n/**\n * A utility function to get initials and a random color\n * useful for displaying avatar placeholders\n */\nexport const getAvatarDetails = (fullName) => {\n    if (!fullName) return \"\";\n    const [firstName, lastname] = fullName.split(\"\");\n    let initials;\n    if (lastname) {\n        initials = `${fullName[0]}${fullName[1]}`;\n    } else {\n        initials = `${firstName[0]}${lastname[0]}`;\n    }\n    const color = randomColor({ seed: initials });\n    return {\n        color,\n        initials,\n    };\n};\n\n/**\n * MAnually redirecting to another URL\n */\nexport const gotoURL = (link) => {\n    window.open(link, \"_blank\");\n};\n\n/**\n * Copy a text to clipboard\n */\nexport const copyToClipboard = (url, successMessage = \"\") => {\n    // fallback for non navigator browser support\n    if (navigator && navigator.clipboard) {\n        navigator.clipboard.writeText(url);\n    } else {\n        const el = document.createElement(\"textarea\");\n        el.value = url;\n        document.body.appendChild(el);\n        el.select();\n        document.execCommand(\"copy\");\n        document.body.removeChild(el);\n    }\n    successMessage && showSuccessToast(successMessage);\n};\n\n/**\n * Validate an email address\n */\nexport function validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\n/**\n * validate a linkedin url\n */\nexport function validateLinkedIn(url) {\n    return LINKEDIN_REGEXP.exec(url);\n}\n\n/**\n * Validate url using regex\n */\nexport function isUrlValid(userInput) {\n    var res = userInput.match(\n        /(http(s)?:\\/\\/.)(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g\n    );\n    if (res == null) return false;\n    else return true;\n}\n","import { Link } from 'react-router-dom';\nimport './styles.scss';\nimport Logo from '@/assets/logo';\nimport { useEffect } from 'react';\nimport { showSuccessToast } from '@/utilities';\n\nexport default function NavBar() {\n\n    useEffect(() => {\n        const query = new URLSearchParams(window.location.search);\n        const message = query.get(\"message\");\n        showSuccessToast(message);\n    }, []);\n\n    return (\n        <div id=\"navbar-wrapper\">\n            <nav>\n                <Link to=\"/\">\n                    <Logo />\n                </Link>\n            </nav>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/desktopWIP.1968d420.svg\";","import { useHistory } from \"react-router\";\nimport NavBar from \"@/components/navbar\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport desktopImage from \"@/assets/svgs/desktopWIP.svg\";\nimport \"./style.scss\";\n\nexport default function Index() {\n\n    return (\n        <>\n        <Router>\n            <NavBar /> \n            <div className=\"desktop\">\n                <img src={desktopImage} alt=\"\" />\n                <h1>We are working on a desktop version for AskRefer. For now please view on a mobile device.</h1>\n            </div>\n        </Router>\n        </>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport DesktopLoading from '@/pages/desktop';\nimport \"./styles.scss\";\n\nconst Layout = ({ children }) => {\n  const [isMobile, setIsMobile] = useState(true);\n  const handleResizeScreen = useCallback(() => {\n    if (window.innerWidth < 767) {\n      setIsMobile(true);\n    } else {\n      setIsMobile(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (window.innerWidth < 767) {\n      setIsMobile(true);\n    } else {\n      setIsMobile(false);\n    }\n  }, [window]);\n\n  //-----------------------------------------------------------------\n  //Fire a function anything window is resized\n  //-----------------------------------------------------------------\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResizeScreen);\n    return () => window.removeEventListener(\"resize\", handleResizeScreen);\n  });\n\n  if (isMobile) {\n    return (\n      <>\n        <div className=\"layout-app-wrapper\">{children}</div>\n      </>\n    );\n  } else {\n    // TODO include a popup that were comin to mobile soon\n    return (\n      <div className=\"layout-app-wrapper\">\n        <DesktopLoading />\n      </div>\n    );\n  }\n};\n\nexport default Layout;\n","export default __webpack_public_path__ + \"static/media/landingicon.a9f60919.svg\";","import React from \"react\";\nimport './loader.scss';\n\n\nconst CircularProgressSpinner = () => {\n    return (\n        <div className=\"askrefer-circular-loader\">\n            <div className=\"lds-ring\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    );\n};\n\nexport default CircularProgressSpinner;\n","import CircularProgressSpinner from \"../loader\";\nimport \"./style.scss\";\n\nexport default function index({ text, onClick, disabled, loading }) {\n    const activateButton = () => {\n        if (disabled || loading) return;\n        return onClick();\n    };\n\n    const className = `${disabled ? \"--disabled\" : \"\"}`;\n    return (\n        <div onClick={activateButton} id=\"action-button\" className={className}>\n            {loading ? (\n                <div className=\"spinner\">\n                    <CircularProgressSpinner />\n                </div>\n            ) : (\n                <h4>{text}</h4>\n            )}\n        </div>\n    );\n}\n","export function QuestionOne() {\n    return(\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"110%\"\n            height=\"50.11\"\n            viewBox=\"0 0 164.998 54.11\"\n        >\n            <g\n                id=\"Group_15282\"\n                data-name=\"Group 15282\"\n                transform=\"translate(-909 -3628.999)\"\n            >\n                <path\n                    id=\"Union_3\"\n                    data-name=\"Union 3\"\n                    d=\"M-5414.593,4769a5,5,0,0,1-5-5v-34l-6.417-11.733c-.557-1.377.292-3.377,1.405-3.376h14.256c.208,0,.274.041.241.114h143.92a5,5,0,0,1,5,5v44a5,5,0,0,1-5,5Z\"\n                    transform=\"translate(6335.187 -1085.894)\"\n                    fill=\"#fdc84e\"\n                />\n                <text\n                    id=\"_Which_investor_should_i_meet_for_my_fundraise_\"\n                    data-name=\"Which investor should i meet for my fund raise\"\n                    transform=\"translate(925 3637)\"\n                    font-size=\"12\"\n                    font-family=\"OpenSans, Open Sans\"\n                    letter-spacing=\"-0.02em\"\n                    fill=\"#3F3D56\"\n                >\n                    <tspan x=\"0\" y=\"13\">\n                        “ I’m looking for a good {\" \"}\n                    </tspan>\n                    <tspan x=\"0\" y=\"35\">\n                         local accountant  ”\n                    </tspan>\n                </text>\n            </g>\n        </svg>\n    )\n}\n\nexport function QuestionTwo() {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"100%\"\n            height=\"50.11\"\n            viewBox=\"0 0 164.998 54.11\"\n        >\n            <g\n                id=\"Group_15283\"\n                data-name=\"Group 15283\"\n                transform=\"translate(-909 -3628.999)\"\n            >\n                <path\n                    id=\"Union_3\"\n                    data-name=\"Union 3\"\n                    d=\"M-5414.593,4769a5,5,0,0,1-5-5v-34l-6.417-11.733c-.557-1.377.292-3.377,1.405-3.376h14.256c.208,0,.274.041.241.114h143.92a5,5,0,0,1,5,5v44a5,5,0,0,1-5,5Z\"\n                    transform=\"translate(6335.187 -1085.894)\"\n                    fill=\"#fdc84e\"\n                />\n                <text\n                    id=\"_Which_investor_should_I_speak_to_\"\n                    data-name=\"“Which investor should I speak to?\"\n                    transform=\"translate(925 3637)\"\n                    font-size=\"12\"\n                    font-family=\"OpenSans, Open Sans\"\n                    letter-spacing=\"-0.02em\"\n                    fill=\"#3F3D56\"\n                >\n                    <tspan x=\"0\" y=\"13\">\n                        “ I’m looking for pilot users{\" \"}\n                    </tspan>\n                    <tspan x=\"0\" y=\"35\">\n                    for our new product ”\n                    </tspan>\n                </text>\n            </g>\n        </svg>\n    );\n}\n\n\nexport function QuestionThree() {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"100%\"\n            height=\"50.11\"\n            viewBox=\"0 0 164.998 54.11\"\n        >\n            <g\n                id=\"Group_15283\"\n                data-name=\"Group 15283\"\n                transform=\"translate(-909 -3628.999)\"\n            >\n                <path\n                    id=\"Union_3\"\n                    data-name=\"Union 3\"\n                    d=\"M-5414.593,4769a5,5,0,0,1-5-5v-34l-6.417-11.733c-.557-1.377.292-3.377,1.405-3.376h14.256c.208,0,.274.041.241.114h143.92a5,5,0,0,1,5,5v44a5,5,0,0,1-5,5Z\"\n                    transform=\"translate(6335.187 -1085.894)\"\n                    fill=\"#fdc84e\"\n                />\n                <text\n                    id=\"_Which_investor_should_I_speak_to_\"\n                    data-name=\"“Which investor should I speak to?\"\n                    transform=\"translate(925 3637)\"\n                    font-size=\"12\"\n                    font-family=\"OpenSans, Open Sans\"\n                    letter-spacing=\"-0.02em\"\n                    fill=\"#3F3D56\"\n                >\n                    <tspan x=\"0\" y=\"13\">\n                        “ I’m looking for a new\n                    </tspan>\n                    <tspan x=\"0\" y=\"35\">\n                    marketing lead ”\n                    </tspan>\n                </text>\n            </g>\n        </svg>\n    );\n}\n\n","import { useHistory } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport Megaphone from \"@/assets/svgs/landingicon.svg\";\nimport Button from \"@/components/button\";\nimport { QuestionOne, QuestionTwo, QuestionThree } from \"./components/questions\";\nimport \"./styles.scss\";\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\nconst CTA_TEXT = \"Get Started\";\n\nexport default function Index() {\n    const history = useHistory();\n    const settings = {\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        autoplay: true,\n        arrows: false\n      };\n    /**\n     * The CTA to be called when we choose to go to the next page\n     */\n    const onClickButton = () => {\n        history.push('/post');\n    };\n\n    return (\n        <div id=\"landing-page\">\n            <section className=\"header\">\n                <img src={Megaphone} alt=\"\" />\n                <h4>\n                    Sometimes you need a personal touch\n                </h4>\n            </section>\n\n            <section className=\"questions\">\n                <Slider {...settings}>\n                    <div>\n                        <QuestionOne />\n                    </div>\n                    <div>\n                        <QuestionTwo />\n                    </div>\n                    <div>\n                        <QuestionThree />\n                    </div>\n                </Slider>\n            </section>\n\n            <section className=\"cta\">\n                <h5>\n                    AskRefer empowers your network to search for the right person\n                </h5>\n                <Button text={CTA_TEXT} onClick={onClickButton}/>\n            </section>\n        </div>\n    );\n}\n","import { useRef } from 'react';\nimport { useClickAway } from 'react-use';\nimport './styles.scss';\n\nexport default function Index({\n    open, toggleOpen, component: Component\n}) {\n    const overlayRef = useRef(null);\n    const className = `${open ? \"\" : \"--hidden\"}`;\n\n    // when they click away from the overlay itself, hide it\n    useClickAway(overlayRef, toggleOpen);\n    return (\n        <div className={className} id=\"overlay-component\">\n            <div ref={overlayRef} className=\"overlay-component__slider\">\n                <Component />\n            </div>\n        </div>\n    )\n}\n","/**\n * Module containg all functions for API requests which are going to be made\n */\nimport axios from \"axios\";\nimport { getToken } from \"@/api/cache\";\n\n\n/**\n * dynamically select the url to use for the backend\n * depending on if were working locally or building for deployment\n */\n// TODO change to use .env and .env.prod respectively\nconst REMOTE_URL = \"https://askrefer-backend.herokuapp.com\";\nexport const BASE = \n     !process.env.NODE_ENV || process.env.NODE_ENV === \"development\"\n         ? \"http://localhost:8000\"\n         : REMOTE_URL;\n\n/**\n * dynamically get the tokens for every API call\n * @param {String} token The token which would enable the user access protected routes\n */\nconst getHeader = () => ({\n    \"Content-Type\": \"application/json\"\n});\n\n/**\n * Make a post request to the server using the stored token in the database\n * @param {String} path The path we wish to make a post request to\n * @param {Object} obj The payload of the post request in the form of an object\n * @returns {Promise}\n */\nexport const postReq = async (path, obj) => {\n    try {\n        const response = await axios.post(BASE + path, obj, {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        return response;\n    } catch (error) {\n        throw error;\n    }\n};\n\n/**\n * Make a get request from the server using the token in the databasr\n * @param {*} path The path we wish to make a post request to\n * @returns {Promise}\n */\nexport const getReq = async (path) => {\n    try {\n        const response = await axios.get(BASE + path);\n        return response;\n    } catch (error) {\n        throw error;\n    }\n};\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport Button from \"@/components/button\";\nimport \"@/styles/input.scss\";\n\nimport \"./styles.scss\";\nimport { copyToClipboard, showErrorToast } from \"@/utilities\";\nimport { LINKEDIN_REGEXP } from \"@/utilities/constants\";\nimport { postReq } from \"@/api\";\n\nconst CTA_TEXT = \"Generate Ask\";\n\nconst INITIAL_STATE = {\n    name: \"\",\n    email: \"\",\n    url: \"\",\n};\n\nexport default function Index({ postState }) {\n    const [state, setState] = useState(INITIAL_STATE);\n    const [link, setLink] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const changeState = (e) => {\n        const { name, value } = e.target;\n        setState((state) => ({\n            ...state,\n            [name]: value,\n        }));\n    };\n\n    const renderIconAndText = () => {\n        return (\n            <span>\n                <i style={{ marginRight: \"10px\" }} class=\"fas fa-copy\"></i>\n                Copy Referral Link\n            </span>\n        );\n    };\n\n    const submitPost = () => {\n        if (loading) return;\n        setLoading(true);\n        const payload = {\n            post: postState,\n            user: {\n                fullName: state.name,\n                email: state.email,\n                linkedIn: state.url,\n            },\n        };\n        postReq(\"/post/create\", payload)\n            .then(({ data: response }) => {\n                const { referralLink } = response;\n                setLink(referralLink);\n                copyToClipboard(referralLink);\n            })\n            .catch((err) => {\n                showErrorToast(\n                    err.response?.data.error || \"There was an unknown error\"\n                );\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    const copyReferralLink = () => {\n        const message =\n            \"Your referral link has been copied to your clipboard.\";\n        copyToClipboard(link, message);\n    };\n\n    const validateFields = () => {\n        const { name, email, url } = state;\n        if (!name) {\n            return showErrorToast(\n                \"Please fill in a name we can use to identify you!\"\n            );\n        }\n        if (!email) {\n            return showErrorToast(\n                \"Please fill in an email we can use to contact you!\"\n            );\n        }\n        if (url && !LINKEDIN_REGEXP.exec(url)) {\n            return showErrorToast(\"Please enter a valid linkedIn profile URL\");\n        }\n    };\n\n    const allFieldsFilled =\n        state.name &&\n        state.email &&\n        state.url ?\n        LINKEDIN_REGEXP.exec(state.url) : true;\n    const buttonIsDisabled = !allFieldsFilled || loading;\n\n    return (\n        <div id=\"kyc-form\" className=\"slider-form\">\n            <div className=\"header-group\">\n                <h1 className=\"slider-form__header\">\n                    {!link\n                        ? \"Tell us more about you\"\n                        : \"Great! Now let’s share your request\"}\n                </h1>\n\n                <h6 className=\"slider-form__subheader\">\n                    {!link\n                        ? \"This allows AskRefer to update you on the progress of your request\"\n                        : \"Copy and share your referral link or share across LinkedIn or WhatsApp\"}\n                </h6>\n            </div>\n\n            <form action=\"javascript:void(0)\">\n                {!link ? (\n                    <>\n                        <div className=\"input__group\">\n                            <label htmlFor=\"\">Name</label>\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                placeholder=\"\"\n                                onChange={changeState}\n                                value={state.name}\n                                disabled={loading || link}\n                            />\n                        </div>\n                        <div className=\"input__group\">\n                            <label htmlFor=\"\">Email</label>\n                            <input\n                                type=\"text\"\n                                name=\"email\"\n                                placeholder=\"\"\n                                onChange={changeState}\n                                value={state.email}\n                                disabled={loading || link}\n                            />\n                        </div>\n                        <div className=\"input__group\">\n                            <label htmlFor=\"\">Linkedin</label>\n                            <input\n                                type=\"text\"\n                                name=\"url\"\n                                onChange={changeState}\n                                value={state.url}\n                                disabled={loading || link}\n                            />\n                        </div>\n                    </>\n                ) : (\n                    \"\"\n                )}\n                <div onClick={validateFields}>\n                    {!link ? (\n                        <Button\n                            text={CTA_TEXT}\n                            onClick={submitPost}\n                            loading={loading}\n                            disabled={buttonIsDisabled}\n                        />\n                    ) : (\n                        <div className=\"link\">\n                            <>\n                                <a\n                                    id=\"linkedin\"\n                                    className=\"share-button\"\n                                    target=\"_blank\"\n                                    title=\"Share on LinkedIn\"\n                                    href={`https://www.linkedin.com/sharing/share-offsite/?url=${link}`}\n                                >\n                                    <i class=\"fab fa-linkedin\"></i>\n                                    <h4>Share on LinkedIn</h4>\n                                </a>\n                                <a\n                                    id=\"whatsapp\"\n                                    className=\"share-button\"\n                                    data-action=\"share/whatsapp/share\"\n                                    href={`whatsapp://send?text=Hi! I’m looking for ${postState.title.toLowerCase()}. can you help? ${link}`}\n                                    target=\"_blank\"\n                                >\n                                    <i class=\"fab fa-whatsapp\"></i>\n                                    <h4>Share on Whatsapp</h4>\n                                </a>\n                                <Button\n                                    text={renderIconAndText()}\n                                    onClick={copyReferralLink}\n                                />\n                            </>\n                        </div>\n                    )}\n                </div>\n            </form>\n        </div>\n    );\n}\n","import { useState, useRef } from \"react\";\nimport Toggle from \"react-toggle\";\nimport { TagsInput } from \"react-tag-input-component\";\n\nimport Overlay from \"@/components/overlay\";\nimport Button from \"@/components/button\";\nimport { showErrorToast } from \"@/utilities\";\n\nimport Kyc from \"./components/kyc\";\nimport \"./styles.scss\";\n\nconst INITIAL_STATE = {\n  desire: \"\",\n  details: \"\",\n  url: \"\",\n  duration: 1000, //set an arbitrarily large deadline, because we no longer use deadlines\n  public: false,\n  allowedEmails: [],\n};\n\nconst CTA_TEXT = \"Proceed\";\nconst TITLE_GUIDE =\n  \"Describe who you’re looking for with as few words as possible\";\nconst MORE_GUIDE = \"Share a bit more context in 1-2 sentences\";\nconst ACCESS_CONTROL_MODE =\n  \"You can either make the post public or input a number of mails to share it to\";\nconst EXTERNAL_GUIDE = \"Upload a pdf with more information\";\n\nexport default function Index() {\n  const [state, setState] = useState(INITIAL_STATE);\n  const [openOverlay, setOpenOverlay] = useState(false);\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const [selected, setSelected] = useState([\"papaya\"]);\n\n  const updateState = (name, value) => {\n    setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  const validateForm = () => {\n    const { desire, details } = state;\n\n    if (!desire) {\n      return showErrorToast(\"Please supply what you are looking for.\");\n    }\n    if (!details) {\n      return showErrorToast(\n        \"Please supply more details to better explain your request.\"\n      );\n    }\n  };\n\n  const buttonIsDisabled = !(state.desire && state.details);\n\n  const formatState = () => ({\n    title: state.desire,\n    details: state.details,\n    durationInWeeks: state.duration,\n    url: formatURL(state.url), //make sure urls not preceeded by http/https are rectified so as not to cause errors\n    accessControlMode: state.public ? \"public\" : \"private\",\n    allowedEmails: state.allowedEmails,\n  });\n\n  const formatURL = (url) => {\n    if (!url) return \"\";\n    if (url.startsWith(\"http://\") || url.startsWith(\"https://\")) {\n      return url;\n    }\n    return `http://${url}`;\n  };\n\n  const gotoSecondState = async () => {\n    setLoading(true);\n    //upload an image to cloundinary\n    await uploadImage();\n    setLoading(false);\n    setOpenOverlay(true);\n  };\n\n  const uploadImage = async () => {\n    const data = new FormData();\n    data.append(\"file\", file);\n    data.append(\"upload_preset\", \"askrefer\");\n    data.append(\"cloud_name\", \"xand6r\");\n\n    await fetch(\"https://api.cloudinary.com/v1_1/xand6r/image/upload\", {\n      method: \"post\",\n      body: data,\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        updateState(\"url\", data.url);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const inputRef = useRef(null);\n\n  return (\n    <div id=\"post-page\">\n      <div className=\"textarea-group\">\n        <h4 className=\"label\">\n          Title\n          <div data-tip={TITLE_GUIDE} className=\"tooltip-wrapper\">\n            <i class=\"fas fa-info-circle fonticon\"></i>\n          </div>\n        </h4>\n        <textarea\n          name=\"desire\"\n          id=\"\"\n          rows=\"1\"\n          maxLength=\"50\"\n          onChange={(e) => updateState(e.target.name, e.target.value)}\n          value={state.desire}\n        ></textarea>\n      </div>\n\n      <div className=\"textarea-group\">\n        <h4 className=\"label\" htmlFor=\"details\">\n          Summary\n          <div data-tip={MORE_GUIDE} className=\"tooltip-wrapper\">\n            <i class=\"fas fa-info-circle fonticon\"></i>\n          </div>\n        </h4>\n        <textarea\n          name=\"details\"\n          id=\"\"\n          cols=\"30\"\n          rows=\"10\"\n          onChange={(e) => updateState(e.target.name, e.target.value)}\n          value={state.details}\n        ></textarea>\n      </div>\n\n      <div className=\"textarea-group\">\n        <h4 className=\"label\" htmlFor=\"url\">\n          PDF attachment\n          <div data-tip={EXTERNAL_GUIDE} className=\"tooltip-wrapper\">\n            <i class=\"fas fa-info-circle fonticon\"></i>\n          </div>\n        </h4>\n        <div\n          className={`upload-wrapper __${file && \"active\"}`}\n          onClick={() => {\n            inputRef.current.click();\n          }}\n        ></div>\n        {/* hidden input for  file upload shadow */}\n        <input\n          onChange={(e) => {\n            const file = e.target.files[0];\n            const { type } = file;\n            if (type === \"application/pdf\") {\n              setFile(file);\n            } else {\n              showErrorToast(`Invalid file type: ${type}, please upload a csv`);\n            }\n          }}\n          style={{ display: \"none\" }}\n          type=\"file\"\n          ref={inputRef}\n        />\n        <div className=\"filename\">{file?.name}</div>\n      </div>\n\n      <div className=\"textarea-group\">\n        <h4 className=\"label\" htmlFor=\"details\">\n          Grant public access\n          <div data-tip={ACCESS_CONTROL_MODE} className=\"tooltip-wrapper\">\n            <i class=\"fas fa-info-circle fonticon\"></i>\n          </div>\n          <Toggle\n            defaultChecked={state.public}\n            icons={false}\n            onChange={() => {\n              updateState(\"public\", !state.public);\n            }}\n          />\n        </h4>\n        {!state.public ? (\n          <TagsInput\n            value={state.allowedEmails}\n            onChange={(val) => updateState(\"allowedEmails\", val)}\n            name=\"fruits\"\n            placeHolder=\"Invite people by mail\"\n            seprators={[\"Enter\", \" \", \",\"]}\n          />\n        ) : (\n          <></>\n        )}\n      </div>\n\n      <div onClick={validateForm} className=\"submit-button\">\n        <Button\n          text={CTA_TEXT}\n          onClick={gotoSecondState}\n          disabled={buttonIsDisabled}\n          loading={loading}\n        />\n      </div>\n      <Overlay\n        open={openOverlay}\n        toggleOpen={() => openOverlay && setOpenOverlay(false)}\n        component={() => <Kyc postState={formatState()} />}\n      />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/pagenotfound.9444914f.svg\";","import { useHistory } from \"react-router\";\n\nimport notFoundImage from \"@/assets/svgs/pagenotfound.svg\";\nimport \"./style.scss\";\n\nexport default function Index() {\n    const history = useHistory();\n\n    const goHome = () => {\n        history.push(\"/\");\n    };\n\n    return (\n        <div className=\"notFound\">\n            <img src={notFoundImage} alt=\"\" />\n            <h1>Resource not found. <span onClick={goHome}>Go home</span></h1>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/closeIcon.60cd9331.svg\";","import React from \"react\";\nimport { useClickAway } from \"react-use\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Document, Page } from \"react-pdf/dist/esm/entry.webpack\";\nimport CloseIcon from \"@/assets/svgs/closeIcon.svg\";\n\nconst PdfViewer = ({ url, onClose, open }) => {\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [loaded, setLoaded] = useState(false);\n  const pdfRef = useRef(null);\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setLoaded(true);\n  }\n  useClickAway(pdfRef, onClose);\n  console.log({url})\n\n  const nextPage = () => setPageNumber((p) => p + 1);\n  const previousPage = () => setPageNumber((p) => p - 1);\n  const isNextPage = pageNumber < numPages;\n  const isPreviousPage = pageNumber > 1;\n\n  if (!open) return <></>;\n  return (\n    <div className=\"pdf__viewercontainer\">\n      <img src={CloseIcon} onClick={onClose} className=\"close__icon\" />\n      <div ref={pdfRef}>\n        <Document file={url} onLoadSuccess={onDocumentLoadSuccess}>\n          <Page pageNumber={pageNumber} />\n        </Document>\n        {numPages && (\n          <div className=\"pagination__wrapper\">\n            <div className=\"navigation\">\n              {isPreviousPage && <span onClick={previousPage}>previous page</span>}\n              {isNextPage && <span onClick={nextPage}>next page</span>}\n            </div>\n            <div className=\"pages\">\n              Page {pageNumber} of {numPages}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PdfViewer;\n","import { useEffect, useState } from \"react\";\n\nimport Button from \"@/components/button\";\nimport \"@/styles/input.scss\";\nimport \"./styles.scss\";\nimport {\n    showErrorToast,\n    showSuccessToast,\n    validateEmail,\n    validateLinkedIn,\n} from \"@/utilities\";\nimport { LINKEDIN_REGEXP } from \"@/utilities/constants\";\nimport { postReq } from \"@/api\";\nimport { useHistory } from \"react-router\";\n\nconst CTA_TEXT = \"Complete\";\nconst INITIAL_STATE = {\n    name: \"\",\n    email: \"\",\n    url: \"\",\n};\n\nexport default function Index({ onSubmit, postId, link, user }) {\n    const history = useHistory();\n    const [state, setState] = useState(INITIAL_STATE);\n    const [loading, setLoading] = useState(false);\n\n    const changeState = (e) => {\n        const { name, value } = e.target;\n        setState((state) => ({\n            ...state,\n            [name]: value,\n        }));\n    };\n\n    useEffect(() => {\n        if(!user) return;\n        setState({...user});\n    }, [user]);\n\n    const recommendSelf = () => {\n        if (loading) return;\n        setLoading(true);\n        const referralId = window.location.href.split(\"/\").reverse()[0];\n        postReq(\"/referral/recommend\", {\n            referralKey: referralId,\n            user: {\n                fullName: state.name,\n                email: state.email,\n                linkedIn: state.url,\n            },\n        })\n            .then(({ data: response }) => {\n                const { error } = response;\n                if (error === \"ALREADY_APPLIED\") {\n                    showErrorToast(\n                        \"You have already applied for this role, thank you!\"\n                    );\n                } else {\n                    showSuccessToast(\"Your application was successfull, you will be contacted if you are a match!\");\n                }\n                onSubmit();\n            })\n            .catch((err) => {\n                showErrorToast(\n                    err.response?.data.error || \"There was an unknown error\"\n                );\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    const validateState = () => {\n        const { name, email, url } = state;\n        if (!name) {\n            return showErrorToast(\n                \"Please fill in a name we can use to identify you!\"\n            );\n        }\n        if (!email) {\n            return showErrorToast(\n                \"Please fill in an email we can use to contact you!\"\n            );\n        }\n        if (!validateEmail(email)) {\n            return showErrorToast(\"Please fill in a valid email address\");\n        }\n    };\n\n    const allFieldsFilled =\n        state.name &&\n        state.email &&\n        // state.url &&\n        validateEmail(state.email) ;\n        // validateLinkedIn(state.url);\n    const buttonIsDisabled = !allFieldsFilled || loading;\n\n    return (\n        <div id=\"kyc-form\" className=\"slider-form\">\n            <div className=\"header-group\">\n                <h1 className=\"slider-form__header\">Awesome!</h1>\n\n                <h6 className=\"slider-form__subheader\">\n                    We will share your details with the original poster. They\n                    will be in touch if it is a match.\n                </h6>\n            </div>\n\n            <form action=\"javascript:void(0)\">\n                <div className=\"input__group\">\n                    <label htmlFor=\"\">Name</label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        onChange={changeState}\n                        value={state.name}\n                    />\n                </div>\n                <div className=\"input__group\">\n                    <label htmlFor=\"\">Email</label>\n                    <input\n                        type=\"text\"\n                        name=\"email\"\n                        onChange={changeState}\n                        value={state.email}\n                    />\n                </div>\n                <div className=\"input__group\">\n                    <label htmlFor=\"\">LinkedIn</label>\n                    <input\n                        type=\"text\"\n                        name=\"url\"\n                        onChange={changeState}\n                        value={state.url}\n                    />\n                </div>\n                <div onClick={validateState}>\n                    <Button\n                        text={CTA_TEXT}\n                        onClick={recommendSelf}\n                        loading={loading}\n                        disabled={buttonIsDisabled}\n                    />\n                </div>\n            </form>\n        </div>\n    );\n}\n","import { useState, useRef, useEffect } from \"react\";\nimport { useClickAway } from \"react-use\";\n\nimport Button from \"@/components/button\";\nimport \"@/styles/input.scss\";\nimport \"./styles.scss\";\nimport {\n    copyToClipboard,\n    showErrorToast,\n    showSuccessToast,\n    validateEmail,\n} from \"@/utilities\";\nimport { postReq } from \"@/api\";\nimport CircularProgressSpinner from \"@/components/loader\";\n\nconst CTA_TEXT = \"Complete\";\nconst INITIAL_STATE = {\n    email: \"\",\n    url: \"\",\n};\n\nexport default function Index({ onSubmit, link, post, user }) {\n    const inputRef = useRef();\n    const dropdownRef = useRef();\n    const [state, setState] = useState(INITIAL_STATE);\n    const [loading, setLoading] = useState(false);\n    const [showDropdown, setShowDropdown] = useState(false);\n    const [attached, setAttached] = useState(false);\n\n    useEffect(() => {\n        setState({\n            ...user,\n            url: link,\n        });\n    }, [link]);\n\n    const closeDropdown = () => {\n        setShowDropdown(false);\n    };\n\n    useClickAway(dropdownRef, closeDropdown);\n\n    const renderDropdown = () => {\n        if(!state.email ){\n            return showErrorToast(\"Please fill in your email adress first!\");\n        }\n        if(!validateEmail(state.email)){\n            return showErrorToast(\"Please fill in a valid email adress!\");\n        }\n        if (state.url) {\n            setShowDropdown(true);\n        }\n    };\n\n    const changeState = (e) => {\n        const { name, value } = e.target;\n        setState((state) => ({\n            ...state,\n            [name]: value,\n        }));\n    };\n\n    function copyURLToClipboard() {\n        copyToClipboard(state.url, \"Link copied to clipboard\");\n    }\n\n    const validateInputs = () => {\n        if (!state.email) {\n            return showErrorToast(\"Please input your email before you submit\");\n        }\n\n        if (!validateEmail(state.email)) {\n            return showErrorToast(\"Please enter a valid email address\");\n        }\n    };\n\n    function attachUserToURL(user) {\n        setLoading(true);\n        setAttached(true)\n        const referralId = link.split(\"/\").reverse()[0];\n        postReq(\"/referral/attach\", {\n            email: user.email,\n            referralKey: referralId,\n        })\n            .then((res) => {\n                console.log(res);\n                console.log(\"Attacked\")\n                setAttached(true)\n            })\n            .catch((err) => {\n                console.log(\n                    err.response?.data.error || \"There was an unknown error attaching user to link\"\n                );\n                setAttached(false)\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }\n\n    useEffect(() => {\n        if(!link || attached || loading) return;\n        attachUserToURL(user);\n    },[link]);\n\n    const buttonDisabled =\n        !state.email || !validateEmail(state.email) || loading || !state.url;\n\n    return (\n        <div id=\"refer-form\" className=\"slider-form\">\n            <div className=\"header-group\">\n                <h1 className=\"slider-form__header\">Awesome!</h1>\n\n                <h6 className=\"slider-form__subheader\">\n                    Share this Url with them\n                </h6>\n            </div>\n\n            <form action=\"javascript:void(0)\">\n                <div className=\"input__group --refer\">\n                    <label htmlFor=\"\">Url link</label>\n                    <div className=\"refer_input__wrapper\">\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            placeholder=\"loading ... \"\n                            value={state.url}\n                            ref={inputRef}\n                            disabled\n                        />\n                        <div onClick={renderDropdown} className=\"copy-button\">\n                            {state.url ? (\n                                <h5>Tap to share</h5>\n                            ) : (\n                                <CircularProgressSpinner />\n                            )}\n                            {showDropdown ? (\n                                <div\n                                    ref={dropdownRef}\n                                    className=\"share-dropdown\"\n                                >\n                                    <h5\n                                        onClick={copyURLToClipboard}\n                                        className=\"item\"\n                                    >\n                                        <i\n                                            style={{ marginRight: \"10px\" }}\n                                            class=\"fas fa-copy\"\n                                        ></i>\n                                        copy link\n                                    </h5>\n                                    <h5 className=\"item\">\n                                        <a\n                                            id=\"whatsapp\"\n                                            className=\"share-button\"\n                                            data-action=\"share/whatsapp/share\"\n                                            href={`whatsapp://send?text=Hi! My friend is looking for ${post.title}. Can you help? ${state.url}`}\n                                            target=\"_blank\"\n                                        >\n                                            <i\n                                                style={{ marginRight: \"10px\" }}\n                                                class=\"fab fa-whatsapp\"\n                                            ></i>\n                                            whatsapp\n                                        </a>\n                                    </h5>\n                                    <h5 className=\"item\">\n                                        <a\n                                            id=\"linkedin\"\n                                            className=\"share-button\"\n                                            target=\"_blank\"\n                                            title=\"Share on LinkedIn\"\n                                            href={`https://www.linkedin.com/sharing/share-offsite/?url=${link}`}\n                                        >\n                                            <i\n                                                style={{ marginRight: \"10px\" }}\n                                                class=\"fab fa-linkedin\"\n                                            ></i>\n                                            linkedin\n                                        </a>\n                                    </h5>\n                                </div>\n                            ) : (\n                                \"\"\n                            )}\n                        </div>\n                    </div>\n                </div>\n                {/* <div className=\"input__group\">\n                    <label htmlFor=\"\">Email Address</label>\n                    <input\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Add your email to be notified if it's a match\"\n                        onChange={changeState}\n                        value={state.email}\n                    />\n                </div>\n                <div className=\"input__group\">\n                    <label htmlFor=\"\">Name</label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder=\"Add your name\"\n                        onChange={changeState}\n                        value={state.name}\n                    />\n                </div> */}\n                <div onClick={validateInputs}>\n                    <Button\n                        text={CTA_TEXT}\n                        onClick={onSubmit}\n                        disabled={buttonDisabled}\n                        loading={loading}\n                    />\n                </div>\n            </form>\n        </div>\n    );\n}\n","import moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { Document, Page } from \"react-pdf/dist/esm/entry.webpack\";\n\nimport { getReq, postReq } from \"@/api\";\nimport PdfViewer from \"@/components/pdfModal\";\nimport Overlay from \"@/components/overlay\";\nimport { showSuccessToast } from \"@/utilities\";\nimport { getAvatarDetails, gotoURL, showErrorToast } from \"@/utilities\";\n\nimport Match from \"./components/match\";\nimport Refer from \"./components/refer\";\nimport CircularProgressSpinner from \"../loader\";\n\nimport \"./styles.scss\";\n\nconst INITIAL_STATE = {\n  fullName: \"\",\n  title: \"\",\n  text: \"\",\n  url: \"\",\n  expiryDate: \"\",\n  creationDate: \"\",\n  postId: \"\",\n  referralId: \"\",\n  userUrl: \"\",\n  email: \"\",\n};\n\nconst TIMEOUT_DURATION = 1500;\nconst DEFAULT_SKELETON_HEIGHT = \"100px\";\n\nexport default function Index({ post, user }) {\n  const [showPdf, setShowPdf] = useState(false);\n  const [state, setState] = useState(INITIAL_STATE);\n  const [yes, setYes] = useState(false);\n  const [maybe, setMaybe] = useState(false);\n  const [loadingLink, setLoadingLink] = useState(false);\n  const [refLink, setrefLink] = useState(\"\");\n  const [stats, setStats] = useState(null);\n\n  const history = useHistory();\n  console.log({ post });\n\n  useEffect(() => {\n    const {\n      createdAt,\n      details,\n      expiryDate,\n      title,\n      url,\n      _id,\n      referralId,\n      owner: { fullName = \"\", url: userUrl = \"\", email },\n      owner,\n    } = post;\n    setState({\n      ...state,\n      fullName,\n      title: title,\n      text: details,\n      url: url,\n      expiryDate: expiryDate,\n      creationDate: createdAt,\n      referralId,\n      postId: _id,\n      userUrl,\n      email,\n    });\n  }, []);\n\n  console.log({ stats });\n  // get the stats of the owner of this page\n  useEffect(() => {\n    if (!Boolean(state.email) || stats) return;\n    (async function fetchStatistics() {\n      const { email } = state;\n      const { data: stats } = await postReq(\"/user/statistics\", { email });\n      setStats(stats);\n    })();\n  }, [state]);\n\n  const avatarDetails = getAvatarDetails(state.fullName);\n\n  const onViewMore = () => {\n    setShowPdf(true);\n  };\n\n  const today = moment();\n  const creationDate = moment(state.creationDate);\n  const expiryDate = moment(state.expiryDate);\n  const timeDifferenceText = (dayDiff) => {\n    const expiresIn =\n      dayDiff === 0 ? \"Today\" : dayDiff === 1 ? \"1 day\" : `${dayDiff} days`;\n    return expiresIn;\n  };\n\n  const goHome = () => {\n    setTimeout(() => {\n      history.push(\"/\");\n    }, TIMEOUT_DURATION);\n  };\n\n  const generateReferral = () => {\n    const { referralId } = state;\n    if (loadingLink) return;\n    // generate a new link then set maybe\n    setLoadingLink(true);\n    setMaybe(true);\n    getReq(`/referral/refer/${referralId}`)\n      .then(({ data: response }) => {\n        const { link } = response;\n        setrefLink(link);\n      })\n      .catch((err) => {\n        showErrorToast(\n          err.response?.data.error || \"There was an unknown error\"\n        );\n      })\n      .finally(() => {\n        setLoadingLink(false);\n      });\n  };\n\n  const onSubmitYes = () => {\n    setYes(false);\n    goHome();\n  };\n\n  const onSubmitMaybe = () => {\n    showSuccessToast(\"We will be in touch. Thank you\");\n    setMaybe(false);\n    goHome();\n  };\n\n  const onSubmitNo = () => {\n    if (loadingLink) return;\n    showSuccessToast(\"Maybe next time. Thank you\");\n    goHome();\n  };\n\n  const gotoOwnerReference = () => {\n    if (!state.userUrl) return;\n    window.open(state.userUrl, \"_blank\");\n  };\n\n  const expiresIn = timeDifferenceText(expiryDate.diff(creationDate, \"day\"));\n  const postedAt = timeDifferenceText(today.diff(creationDate, \"day\"));\n  const isPdf = state.url && state.url.endsWith(\"pdf\");\n  // moment\n  return (\n    <div id=\"post-card\">\n      <div className=\"top-nav\" />\n      <div className=\"content-body\">\n        <div className=\"poster_details\">\n          <div\n            style={{\n              backgroundColor: avatarDetails.color,\n              cursor: state.userUrl ? \"pointer\" : \"text\",\n            }}\n            onClick={gotoOwnerReference}\n            className=\"poster_details__img\"\n          >\n            <h4>{avatarDetails.initials}</h4>\n          </div>\n          <div className=\"extra_details\">\n            <h3\n              onClick={gotoOwnerReference}\n              style={{ cursor: state.userUrl ? \"pointer\" : \"text\" }}\n              className=\"poster_details__text\"\n            >\n              {state.fullName}\n            </h3>\n            <h6>{state.title}</h6>\n          </div>\n        </div>\n\n        {/* section for the stats */}\n        {stats ? (\n          <div>\n            <div className=\"stats_details\">\n              <div className=\"one_detail\">\n                <h2> {stats.postcount} </h2>\n                <h5>Posts</h5>\n              </div>\n\n              <div className=\"one_detail\">\n                <h2> {stats.referralCount} </h2>\n                <h5>Referrals</h5>\n              </div>\n\n              <div className=\"one_detail\">\n                <h2> {stats.totalAccepted} </h2>\n                <h5>Hires</h5>\n              </div>\n            </div>\n\n            <div className=\"action_details\">\n              <div onClick={generateReferral} className=\"action_button --maybe\">\n                <h5>Share</h5>\n              </div>\n              <div\n                onClick={() => !loadingLink && setYes(true)}\n                className=\"action_button --yes\"\n              >\n                <h5>Shortlist me</h5>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <Skeleton style={{ height: DEFAULT_SKELETON_HEIGHT }} />\n        )}\n        {/* section for the stats */}\n\n        {/* section for the actual post */}\n        <div className=\"desire_details_wrapper\">\n          <div className=\"desire_details\">\n            <h4>More details</h4>\n            <h5>{state.text}</h5>\n          </div>\n        </div>\n        {/* section for the actual post */}\n\n        {/* section to display pdf attachments*/}\n        {isPdf ? (\n          <div className=\"attachment_details_wrapper\">\n            <div className=\"attachment_details\">\n              <h4>Attached Media</h4>\n              <div onClick={onViewMore} className=\"attachments\">\n                <Document file={state.url}>\n                  <Page pageNumber={1} />\n                </Document>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <></>\n        )}\n        {/* section to display pdfs */}\n      </div>\n\n      {/* <div className=\"top_section\">\n        <div className=\"post_content\">\n          <h5>\n            {state.text}\n            {state.url && state.url.endsWith('.pdf') ? (\n              <span onClick={onViewMore}>\n                <i class=\"fas fa-external-link-alt\"></i>\n              </span>\n            ) : (\n              <></>\n            )}\n          </h5>\n        </div>\n        <div className=\"auxilliary_content\">\n          <h6 className=\"auxilliary_content__posted\">\n            {postedAt} {postedAt === \"Today\" ? \"\" : \"ago\"}\n          </h6>\n        </div>\n      </div>\n      <div className=\"divider\" />\n      <div className=\"bottom_section\">\n        \n      </div> */}\n      {/* for yes */}\n      <Overlay\n        open={yes}\n        toggleOpen={() => yes && setYes(false)}\n        component={() => (\n          <Match\n            user={user}\n            postId={state.postId}\n            link={refLink}\n            onSubmit={onSubmitYes}\n          />\n        )}\n      />\n      {/* for maybe */}\n      <Overlay\n        open={maybe}\n        toggleOpen={() => maybe && setMaybe(false)}\n        component={() => (\n          <Refer\n            user={user}\n            link={refLink}\n            post={state}\n            onSubmit={onSubmitMaybe}\n          />\n        )}\n      />\n      {/* for vieweing pdf */}\n      {state.url && (\n        <PdfViewer\n          url={state.url}\n          open={showPdf}\n          onClose={() => setShowPdf(false)}\n        />\n      )}\n      {/* for vieweing pdf */}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/interview.e05c9bbf.svg\";","import { useState } from \"react\";\n\nimport Button from \"@/components/button\";\nimport \"@/styles/input.scss\";\nimport \"./styles.scss\";\nimport {\n  showErrorToast,\n  showSuccessToast,\n  validateEmail,\n  validateLinkedIn,\n} from \"@/utilities\";\nimport { LINKEDIN_REGEXP } from \"@/utilities/constants\";\nimport { postReq } from \"@/api\";\nimport { useHistory } from \"react-router\";\n\nconst CTA_TEXT = \"Proceed\";\nconst INITIAL_STATE = {\n  name: \"\",\n  email: \"\",\n  url: \"\",\n  code: \"\",\n};\n\nexport default function Index({ onSubmit, setError }) {\n  const history = useHistory();\n  const [state, setState] = useState(INITIAL_STATE);\n  const [loading, setLoading] = useState(false);\n  const [stage, setStage] = useState(0);\n  const [post, setPost] = useState(null);\n\n  const changeState = (e) => {\n    const { name, value } = e.target;\n    setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  const authenticateUser = () => {\n    if (loading) return;\n    setLoading(true);\n\n    if (stage) {\n      // verify if the code is equal to the actual code\n      // <ALEX></ALEX>\n      if (post.key === state.code ||true) {\n        setTimeout(() => {\n          setLoading(false);\n          onSubmit(post.data, state);\n        }, 1500);\n      } else {\n        setTimeout(() => {\n          showErrorToast(\"Incorrect code!\");\n          setLoading(false);\n        }, 1000);\n      }\n      return;\n    }\n    const referralId = window.location.href.split(\"/\").reverse()[0];\n    const completeState = {\n      email: state.email,\n      referralId,\n    };\n\n    postReq(\"/post/validateaccess\", {\n      ...completeState,\n    })\n      .then(({ data: response }) => {\n        const { status, data, message, error } = response;\n        if (error) {\n          setError(error);\n        }\n        if (status === \"ERROR\") {\n          return showErrorToast(message, {\n            autoClose: 5000,\n          });\n        } \n        if (data.accessControlMode === \"public\") {\n            return onSubmit(data);\n        }\n        setStage(1);\n        setPost(response);\n      })\n      .catch((err) => {\n        showErrorToast(\n          err.response?.data.error || \"There was an unknown error\"\n        );\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const validateState = () => {\n    const { email, name } = state;\n    if (!email) {\n      return showErrorToast(\n        \"Please fill in an email we can use to contact you!\"\n      );\n    }\n    if (!validateEmail(email)) {\n      return showErrorToast(\"Please fill in a valid email address\");\n    }\n    if(!name){\n      return  showErrorToast(\"Please fill in a valid name\");\n    }\n  };\n\n  const allFieldsFilled =\n    state.email &&\n    state.name &&\n    validateEmail(state.email);\n  // validateLinkedIn(state.url);\n  const buttonIsDisabled = !allFieldsFilled || loading;\n\n  return (\n    <div id=\"preview-form\" className=\"slider-form\">\n      <div className=\"header-group\">\n        <h1 className=\"slider-form__header\">Welcome!</h1>\n\n        {!stage ? (\n          <h6 className=\"slider-form__subheader\">\n            Please input your personal details to access the post.\n          </h6>\n        ) : (\n          <h6 className=\"slider-form__subheader\">\n            Please check your email for a five digit code to access the post\n          </h6>\n        )}\n      </div>\n\n      <form action=\"javascript:void(0)\">\n        {!stage ? (\n          <>\n          <div className=\"input__group\">\n              <label htmlFor=\"\">Name</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                onChange={changeState}\n                value={state.name}\n              />\n            </div>\n            <div className=\"input__group\">\n              <label htmlFor=\"\">Email</label>\n              <input\n                type=\"text\"\n                name=\"email\"\n                onChange={changeState}\n                value={state.email}\n              />\n            </div>\n            <div className=\"input__group\">\n              <label htmlFor=\"\">LinkedIn (optional)</label>\n              <input\n                type=\"text\"\n                name=\"url\"\n                onChange={changeState}\n                value={state.url}\n              />\n            </div>\n          </>\n        ) : (\n          <div className=\"input__group\">\n            <label htmlFor=\"\">Code</label>\n            <input\n              type=\"text\"\n              name=\"code\"\n              onChange={changeState}\n              value={state.code}\n            />\n          </div>\n        )}\n        <div onClick={validateState}>\n          <Button\n            text={CTA_TEXT}\n            onClick={authenticateUser}\n            loading={loading}\n            disabled={buttonIsDisabled}\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/brokenlink.d2960b0e.svg\";","import { useHistory } from \"react-router\";\n\nimport brokenLink from \"@/assets/svgs/brokenlink.svg\";\nimport \"./style.scss\";\n\nexport default function Index() {\n    const history = useHistory();\n\n    const goHome = () => {\n        history.push(\"/\");\n    };\n\n    return (\n        <div className=\"expired\">\n            <img src={brokenLink} alt=\"\" />\n            <h1>\n                This post has expired. <span onClick={goHome}>Go home</span>\n            </h1>\n        </div>\n    );\n}\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Skeleton from \"react-loading-skeleton\";\n\nimport Error404 from \"@/pages/notFound\";\nimport { showErrorToast } from \"@/utilities\";\nimport PostCard from \"@/components/postcard\";\nimport interviewImage from \"@/assets/svgs/interview.svg\";\nimport Button from \"@/components/button\";\nimport Preview from \"@/components/postcard/components/preview\";\nimport Overlay from \"@/components/overlay\";\n\nimport { getReq } from \"@/api\";\n\nimport ExpiredPage from \"./components/expired\";\nimport \"./styles.scss\";\n\nconst CTA_TEXT = \"Post an Ask\";\nconst DEFAULT_SKELETON_HEIGHT = \"225px\";\n\nexport default function Index(props) {\n  const history = useHistory();\n  const [loading, setLoading] = useState(true);\n  const [post, setPost] = useState({});\n  const [error, setError] = useState(\"\");\n  const [previewOpen, setPreviewOpen] = useState(true);\n  const [user, setUser] = useState(null);\n\n  const paramId = props.match.params.id;\n\n\n  const gotoCreatePost = () => {\n    history.push(\"/post\");\n  };\n\n  if (error === \"NOT_FOUND\") {\n    return <Error404 />;\n  }\n\n  if (error === \"EXPIRED\") {\n    return <ExpiredPage />;\n  }\n\n  return (\n    <div id=\"referral-page\">\n      {loading ? (\n        <Skeleton style={{ height: DEFAULT_SKELETON_HEIGHT }} />\n      ) : (\n        <PostCard post={post} user={user} />\n      )}\n      {/* <img src={interviewImage} alt=\"poster\" className=\"poster-image\" /> */}\n      <div className=\"post-ask\">\n        <Button text={CTA_TEXT} onClick={gotoCreatePost} />\n      </div>\n\n      {/* section for the identity verification footer */}\n      <Overlay\n        open={previewOpen}\n        toggleOpen={() => false}\n        component={() => (\n          <Preview\n            onSubmit={(post, user) => {\n              setPost({ ...post, referralId: paramId });\n              setUser(user)\n              setLoading(false);\n              setPreviewOpen(false)\n            }}\n            setError={setError}\n          />\n        )}\n      />\n    </div>\n  );\n}\n","import { Switch, Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport ReactTooltip from 'react-tooltip';\n\n// import components\nimport NavBar from \"@/components/navbar\";\n// import pages\nimport LandingPage from \"@/pages/landing\";\nimport PostPage from \"@/pages/post\";\nimport ReferralPage from \"@/pages/referral\";\n\nimport \"@/styles/global.scss\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nexport default function Routes() {\n    return (\n        <>\n            <NavBar />\n            <Switch>\n                <Route exact path=\"/\" component={LandingPage} />\n                <Route exact path=\"/post\" component={PostPage} />\n                <Route path=\"/referral/:id\" component={ReferralPage} />\n            </Switch>\n            <ToastContainer />\n            <ReactTooltip event=\"click\"  className=\"tooltip\"/>\n        </>\n    );\n}\n","import { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./routes\";\nimport \"@/styles/global.scss\";\n\n\nfunction App(props) {\n    return (\n        <Router>\n            <Routes />\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Layout from '@/components/layout';\nimport App from \"./App\";\n\n// import * as serviceWorker from \"@/workers/serviceWorker\";\n// import { subscribeUser, requestPermission } from \"@/workers/subscriptions\";\nimport reportWebVitals from \"@/workers/reportWebVitals\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Layout>\n            <App />\n        </Layout>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// uncomment when setting up real time notifications\n// serviceWorker.register();\n// requestPermission();\n// subscribeUser();\n"],"sourceRoot":""}